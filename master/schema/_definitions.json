{
  "definitions": {
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        }, 
        {
          "type": "integer"
        }
      ]
    }, 
    "io.kedge.DeploymentConfigSpecMod": {
      "required": [
        "containers", 
        "strategy", 
        "triggers", 
        "replicas", 
        "test"
      ], 
      "description": "Ochestrator: OpenShift DeploymentConfigSpecMod is Kedge's extension of OpenShift DeploymentConfig in order to define and allow a complete kedge app based on OpenShift", 
      "properties": {
        "volumeClaims": {
          "items": {
            "$ref": "#/definitions/io.kedge.VolumeClaim"
          }, 
          "type": "array", 
          "description": "List of volume that should be mounted on the pod."
        }, 
        "dnsPolicy": {
          "type": "string", 
          "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
        }, 
        "ingresses": {
          "items": {
            "$ref": "#/definitions/io.kedge.IngressSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Ingress"
        }, 
        "uid": {
          "type": "string", 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "namespace": {
          "type": "string", 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "hostNetwork": {
          "type": "boolean", 
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
        }, 
        "paused": {
          "type": "boolean", 
          "description": "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers."
        }, 
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          }, 
          "x-kubernetes-patch-merge-key": "uid", 
          "type": "array", 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "restartPolicy": {
          "type": "string", 
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
        }, 
        "generateName": {
          "type": "string", 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
        }, 
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
        }, 
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "automountServiceAccountToken": {
          "type": "boolean", 
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
        }, 
        "minReadySeconds": {
          "type": "integer", 
          "description": "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)", 
          "format": "int32"
        }, 
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSecurityContext"
        }, 
        "nodeName": {
          "type": "string", 
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
        }, 
        "hostAliases": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostAlias"
          }, 
          "x-kubernetes-patch-merge-key": "ip", 
          "type": "array", 
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "hostname": {
          "type": "string", 
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
        }, 
        "serviceAccount": {
          "type": "string", 
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
        }, 
        "strategy": {
          "description": "Strategy describes how a deployment is executed.", 
          "$ref": "#/definitions/v1.DeploymentStrategy"
        }, 
        "finalizers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "affinity": {
          "description": "If specified, the pod's scheduling constraints", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Affinity"
        }, 
        "template": {
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected.", 
          "$ref": "#/definitions/v1.PodTemplateSpec"
        }, 
        "resourceVersion": {
          "type": "string", 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "test": {
          "type": "boolean", 
          "description": "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action."
        }, 
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Toleration"
          }, 
          "type": "array", 
          "description": "If specified, the pod's tolerations."
        }, 
        "revisionHistoryLimit": {
          "type": "integer", 
          "description": "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified. Defaults to 10. (This only applies to DeploymentConfigs created via the new group API resource, not the legacy resource.)", 
          "format": "int32"
        }, 
        "subdomain": {
          "type": "string", 
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
        }, 
        "annotations": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "hostPID": {
          "type": "boolean", 
          "description": "Use the host's pid namespace. Optional: Default to false."
        }, 
        "configMaps": {
          "items": {
            "$ref": "#/definitions/io.kedge.ConfigMap"
          }, 
          "type": "array", 
          "description": "List of configMaps"
        }, 
        "labels": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "serviceAccountName": {
          "type": "string", 
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        }, 
        "replicas": {
          "type": "integer", 
          "description": "Replicas is the number of desired replicas.", 
          "format": "int32"
        }, 
        "clusterName": {
          "type": "string", 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "appversion": {
          "type": "string", 
          "description": "Field to specify the version of application"
        }, 
        "selector": {
          "type": "object", 
          "description": "Selector is a label query over pods that should match the Replicas count."
        }, 
        "controller": {
          "type": "string"
        }, 
        "hostIPC": {
          "type": "boolean", 
          "description": "Use the host's ipc namespace. Optional: Default to false."
        }, 
        "services": {
          "items": {
            "$ref": "#/definitions/io.kedge.ServiceSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Services"
        }, 
        "includeResources": {
          "type": "array", 
          "description": "List of Kubernetes resource files, that can be directly given to Kubernetes"
        }, 
        "buildConfigs": {
          "items": {
            "$ref": "#/definitions/io.kedge.BuildConfigSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift BuildConfigs"
        }, 
        "imageStreams": {
          "items": {
            "$ref": "#/definitions/io.kedge.ImageStreamSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift ImageStreams"
        }, 
        "name": {
          "type": "string", 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "schedulerName": {
          "type": "string", 
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
        }, 
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "secrets": {
          "items": {
            "$ref": "#/definitions/io.kedge.SecretSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Secrets"
        }, 
        "triggers": {
          "items": {
            "$ref": "#/definitions/v1.DeploymentTriggerPolicy"
          }, 
          "type": "array", 
          "description": "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger."
        }, 
        "activeDeadlineSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.", 
          "format": "int64"
        }, 
        "terminationGracePeriodSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.", 
          "format": "int64"
        }, 
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers"
        }, 
        "containers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
        }, 
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Volume"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "routes": {
          "items": {
            "$ref": "#/definitions/io.kedge.RouteSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift Routes"
        }, 
        "initContainers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers."
        }, 
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "selfLink": {
          "type": "string", 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }
      }
    }, 
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "oneOf": [
        {
          "type": "string"
        }, 
        {
          "type": "integer"
        }
      ]
    }, 
    "io.kedge.DeploymentSpecMod": {
      "required": [
        "containers"
      ], 
      "description": "DeploymentSpecMod is Kedge's extension of Kubernetes DeploymentSpec and allows defining a complete kedge application", 
      "properties": {
        "volumeClaims": {
          "items": {
            "$ref": "#/definitions/io.kedge.VolumeClaim"
          }, 
          "type": "array", 
          "description": "List of volume that should be mounted on the pod."
        }, 
        "dnsPolicy": {
          "type": "string", 
          "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
        }, 
        "ingresses": {
          "items": {
            "$ref": "#/definitions/io.kedge.IngressSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Ingress"
        }, 
        "uid": {
          "type": "string", 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "namespace": {
          "type": "string", 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "hostNetwork": {
          "type": "boolean", 
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
        }, 
        "paused": {
          "type": "boolean", 
          "description": "Indicates that the deployment is paused."
        }, 
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          }, 
          "x-kubernetes-patch-merge-key": "uid", 
          "type": "array", 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "restartPolicy": {
          "type": "string", 
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
        }, 
        "generateName": {
          "type": "string", 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
        }, 
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
        }, 
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "automountServiceAccountToken": {
          "type": "boolean", 
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
        }, 
        "minReadySeconds": {
          "type": "integer", 
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)", 
          "format": "int32"
        }, 
        "includeResources": {
          "type": "array", 
          "description": "List of Kubernetes resource files, that can be directly given to Kubernetes"
        }, 
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSecurityContext"
        }, 
        "nodeName": {
          "type": "string", 
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
        }, 
        "hostAliases": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostAlias"
          }, 
          "x-kubernetes-patch-merge-key": "ip", 
          "type": "array", 
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "hostname": {
          "type": "string", 
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
        }, 
        "serviceAccount": {
          "type": "string", 
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
        }, 
        "strategy": {
          "description": "The deployment strategy to use to replace existing pods with new ones.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentStrategy"
        }, 
        "finalizers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "affinity": {
          "description": "If specified, the pod's scheduling constraints", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Affinity"
        }, 
        "template": {
          "description": "Template describes the pods that will be created.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }, 
        "resourceVersion": {
          "type": "string", 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Toleration"
          }, 
          "type": "array", 
          "description": "If specified, the pod's tolerations."
        }, 
        "revisionHistoryLimit": {
          "type": "integer", 
          "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.", 
          "format": "int32"
        }, 
        "subdomain": {
          "type": "string", 
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
        }, 
        "annotations": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "hostPID": {
          "type": "boolean", 
          "description": "Use the host's pid namespace. Optional: Default to false."
        }, 
        "configMaps": {
          "items": {
            "$ref": "#/definitions/io.kedge.ConfigMap"
          }, 
          "type": "array", 
          "description": "List of configMaps"
        }, 
        "labels": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "serviceAccountName": {
          "type": "string", 
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        }, 
        "replicas": {
          "type": "integer", 
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.", 
          "format": "int32"
        }, 
        "clusterName": {
          "type": "string", 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "appversion": {
          "type": "string", 
          "description": "Field to specify the version of application"
        }, 
        "selector": {
          "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }, 
        "controller": {
          "type": "string"
        }, 
        "hostIPC": {
          "type": "boolean", 
          "description": "Use the host's ipc namespace. Optional: Default to false."
        }, 
        "services": {
          "items": {
            "$ref": "#/definitions/io.kedge.ServiceSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Services"
        }, 
        "progressDeadlineSeconds": {
          "type": "integer", 
          "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Once autoRollback is implemented, the deployment controller will automatically rollback failed deployments. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.", 
          "format": "int32"
        }, 
        "buildConfigs": {
          "items": {
            "$ref": "#/definitions/io.kedge.BuildConfigSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift BuildConfigs"
        }, 
        "imageStreams": {
          "items": {
            "$ref": "#/definitions/io.kedge.ImageStreamSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift ImageStreams"
        }, 
        "name": {
          "type": "string", 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "schedulerName": {
          "type": "string", 
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
        }, 
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "secrets": {
          "items": {
            "$ref": "#/definitions/io.kedge.SecretSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Secrets"
        }, 
        "containers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
        }, 
        "activeDeadlineSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.", 
          "format": "int64"
        }, 
        "terminationGracePeriodSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.", 
          "format": "int64"
        }, 
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers"
        }, 
        "rollbackTo": {
          "description": "The config this deployment is rolling back to. Will be cleared after rollback is done.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollbackConfig"
        }, 
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Volume"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "routes": {
          "items": {
            "$ref": "#/definitions/io.kedge.RouteSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift Routes"
        }, 
        "initContainers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers."
        }, 
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "selfLink": {
          "type": "string", 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }
      }
    }, 
    "io.kedge.JobSpecMod": {
      "required": [
        "containers"
      ], 
      "description": "JobSpecMod is Kedge's extension of Kubernetes JobSpec and allows defining a complete kedge application", 
      "properties": {
        "volumeClaims": {
          "items": {
            "$ref": "#/definitions/io.kedge.VolumeClaim"
          }, 
          "type": "array", 
          "description": "List of volume that should be mounted on the pod."
        }, 
        "dnsPolicy": {
          "type": "string", 
          "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
        }, 
        "ingresses": {
          "items": {
            "$ref": "#/definitions/io.kedge.IngressSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Ingress"
        }, 
        "uid": {
          "type": "string", 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }, 
        "completions": {
          "type": "integer", 
          "description": "Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/", 
          "format": "int32"
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "namespace": {
          "type": "string", 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "hostNetwork": {
          "type": "boolean", 
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
        }, 
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          }, 
          "x-kubernetes-patch-merge-key": "uid", 
          "type": "array", 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "restartPolicy": {
          "type": "string", 
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
        }, 
        "generateName": {
          "type": "string", 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
        }, 
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "automountServiceAccountToken": {
          "type": "boolean", 
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
        }, 
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSecurityContext"
        }, 
        "nodeName": {
          "type": "string", 
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
        }, 
        "hostAliases": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostAlias"
          }, 
          "x-kubernetes-patch-merge-key": "ip", 
          "type": "array", 
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "hostname": {
          "type": "string", 
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
        }, 
        "serviceAccount": {
          "type": "string", 
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
        }, 
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
        }, 
        "finalizers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "affinity": {
          "description": "If specified, the pod's scheduling constraints", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Affinity"
        }, 
        "template": {
          "description": "Describes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/", 
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }, 
        "resourceVersion": {
          "type": "string", 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Toleration"
          }, 
          "type": "array", 
          "description": "If specified, the pod's tolerations."
        }, 
        "subdomain": {
          "type": "string", 
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
        }, 
        "annotations": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "hostPID": {
          "type": "boolean", 
          "description": "Use the host's pid namespace. Optional: Default to false."
        }, 
        "configMaps": {
          "items": {
            "$ref": "#/definitions/io.kedge.ConfigMap"
          }, 
          "type": "array", 
          "description": "List of configMaps"
        }, 
        "labels": {
          "additionalProperties": {
            "type": "string"
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "serviceAccountName": {
          "type": "string", 
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        }, 
        "manualSelector": {
          "type": "boolean", 
          "description": "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://git.k8s.io/community/contributors/design-proposals/selector-generation.md"
        }, 
        "clusterName": {
          "type": "string", 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "appversion": {
          "type": "string", 
          "description": "Field to specify the version of application"
        }, 
        "selector": {
          "description": "A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }, 
        "controller": {
          "type": "string"
        }, 
        "hostIPC": {
          "type": "boolean", 
          "description": "Use the host's ipc namespace. Optional: Default to false."
        }, 
        "services": {
          "items": {
            "$ref": "#/definitions/io.kedge.ServiceSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Services"
        }, 
        "includeResources": {
          "type": "array", 
          "description": "List of Kubernetes resource files, that can be directly given to Kubernetes"
        }, 
        "buildConfigs": {
          "items": {
            "$ref": "#/definitions/io.kedge.BuildConfigSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift BuildConfigs"
        }, 
        "imageStreams": {
          "items": {
            "$ref": "#/definitions/io.kedge.ImageStreamSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift ImageStreams"
        }, 
        "name": {
          "type": "string", 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "schedulerName": {
          "type": "string", 
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
        }, 
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }, 
        "secrets": {
          "items": {
            "$ref": "#/definitions/io.kedge.SecretSpec"
          }, 
          "type": "array", 
          "description": "List of Kubernetes Secrets"
        }, 
        "containers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated."
        }, 
        "activeDeadlineSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer This only sets ActiveDeadlineSeconds in JobSpec, not PodSpec", 
          "format": "int64"
        }, 
        "terminationGracePeriodSeconds": {
          "type": "integer", 
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.", 
          "format": "int64"
        }, 
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.", 
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers"
        }, 
        "parallelism": {
          "type": "integer", 
          "description": "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/", 
          "format": "int32"
        }, 
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Volume"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "routes": {
          "items": {
            "$ref": "#/definitions/io.kedge.RouteSpec"
          }, 
          "type": "array", 
          "description": "List of OpenShift Routes"
        }, 
        "initContainers": {
          "items": {
            "$ref": "#/definitions/io.kedge.ContainerSpec"
          }, 
          "type": "array", 
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers."
        }, 
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
          }, 
          "x-kubernetes-patch-merge-key": "name", 
          "type": "array", 
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod", 
          "x-kubernetes-patch-strategy": "merge"
        }, 
        "selfLink": {
          "type": "string", 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }
      }
    }
  }
}