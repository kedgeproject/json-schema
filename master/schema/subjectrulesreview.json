{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "spec"
  ], 
  "type": "object", 
  "description": "SubjectRulesReview is a resource you can create to determine which actions another user can perform in a namespace", 
  "properties": {
    "status": {
      "additionalProperties": false, 
      "required": [
        "rules"
      ], 
      "description": "SubjectRulesReviewStatus is contains the result of a rules check", 
      "properties": {
        "rules": {
          "items": {
            "additionalProperties": false, 
            "required": [
              "verbs", 
              "apiGroups", 
              "resources"
            ], 
            "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", 
            "properties": {
              "resourceNames": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
              }, 
              "nonResourceURLs": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different."
              }, 
              "apiGroups": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "array", 
                "description": "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed"
              }, 
              "verbs": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "array", 
                "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
              }, 
              "attributeRestrictions": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error."
              }, 
              "resources": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "array", 
                "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
              }
            }
          }, 
          "type": "array", 
          "description": "Rules is the list of rules (no particular sort) that are allowed for the subject"
        }, 
        "evaluationError": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "EvaluationError can appear in combination with Rules.  It means some error happened during evaluation that may have prevented additional rules from being populated."
        }
      }
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "additionalProperties": false, 
      "required": [
        "user", 
        "groups", 
        "scopes"
      ], 
      "description": "SubjectRulesReviewSpec adds information about how to conduct the check", 
      "properties": {
        "scopes": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "array", 
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\"."
        }, 
        "user": {
          "type": "string", 
          "description": "User is optional.  At least one of User and Groups must be specified."
        }, 
        "groups": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "array", 
          "description": "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified."
        }
      }
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
    }
  }
}