{
  "swagger": "2.0",
  "info": {
    "description": "The OpenShift API exposes operations for managing an enterprise Kubernetes cluster, including security and user management, application deployments, image and source builds, HTTP(s) routing, and project management.",
    "title": "OpenShift v1 REST API",
    "version": "v1"
  },
  "host": "127.0.0.1:8443",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/oapi/v1": {
      "get": {
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/v1.APIResourceList"
            }
          }
        },
        "operationId": "getAPIResources",
        "summary": "get available resources"
      }
    },
    "/oapi/v1/appliedclusterresourcequotas": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.AppliedClusterResourceQuotaList"
            }
          }
        },
        "operationId": "listAppliedClusterResourceQuotaForAllNamespaces",
        "summary": "list objects of kind AppliedClusterResourceQuota"
      }
    },
    "/oapi/v1/buildconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfigList"
            }
          }
        },
        "operationId": "listBuildConfigForAllNamespaces",
        "summary": "list or watch objects of kind BuildConfig"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        },
        "operationId": "createBuildConfigForAllNamespaces",
        "summary": "create a BuildConfig"
      }
    },
    "/oapi/v1/builds": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildList"
            }
          }
        },
        "operationId": "listBuildForAllNamespaces",
        "summary": "list or watch objects of kind Build"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "createBuildForAllNamespaces",
        "summary": "create a Build"
      }
    },
    "/oapi/v1/clusternetworks": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionClusterNetwork",
        "summary": "delete collection of ClusterNetwork"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetworkList"
            }
          }
        },
        "operationId": "listClusterNetwork",
        "summary": "list or watch objects of kind ClusterNetwork"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          }
        },
        "operationId": "createClusterNetwork",
        "summary": "create a ClusterNetwork"
      }
    },
    "/oapi/v1/clusternetworks/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterNetwork",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteClusterNetwork",
        "summary": "delete a ClusterNetwork"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the ClusterNetwork",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          }
        },
        "operationId": "readClusterNetwork",
        "summary": "read the specified ClusterNetwork"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the ClusterNetwork",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          }
        },
        "operationId": "patchClusterNetwork",
        "summary": "partially update the specified ClusterNetwork"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          },
          {
            "description": "name of the ClusterNetwork",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterNetwork"
            }
          }
        },
        "operationId": "replaceClusterNetwork",
        "summary": "replace the specified ClusterNetwork"
      }
    },
    "/oapi/v1/clusterresourcequotas": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionClusterResourceQuota",
        "summary": "delete collection of ClusterResourceQuota"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuotaList"
            }
          }
        },
        "operationId": "listClusterResourceQuota",
        "summary": "list or watch objects of kind ClusterResourceQuota"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "createClusterResourceQuota",
        "summary": "create a ClusterResourceQuota"
      }
    },
    "/oapi/v1/clusterresourcequotas/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteClusterResourceQuota",
        "summary": "delete a ClusterResourceQuota"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "readClusterResourceQuota",
        "summary": "read the specified ClusterResourceQuota"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "patchClusterResourceQuota",
        "summary": "partially update the specified ClusterResourceQuota"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "replaceClusterResourceQuota",
        "summary": "replace the specified ClusterResourceQuota"
      }
    },
    "/oapi/v1/clusterresourcequotas/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "readClusterResourceQuotaStatus",
        "summary": "read status of the specified ClusterResourceQuota"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "patchClusterResourceQuotaStatus",
        "summary": "partially update status of the specified ClusterResourceQuota"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterResourceQuota"
            }
          }
        },
        "operationId": "replaceClusterResourceQuotaStatus",
        "summary": "replace status of the specified ClusterResourceQuota"
      }
    },
    "/oapi/v1/clusterrolebindings": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBindingList"
            }
          }
        },
        "operationId": "listClusterRoleBinding",
        "summary": "list objects of kind ClusterRoleBinding"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          }
        },
        "operationId": "createClusterRoleBinding",
        "summary": "create a ClusterRoleBinding"
      }
    },
    "/oapi/v1/clusterrolebindings/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterRoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteClusterRoleBinding",
        "summary": "delete a ClusterRoleBinding"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterRoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          }
        },
        "operationId": "readClusterRoleBinding",
        "summary": "read the specified ClusterRoleBinding"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the ClusterRoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          }
        },
        "operationId": "patchClusterRoleBinding",
        "summary": "partially update the specified ClusterRoleBinding"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          },
          {
            "description": "name of the ClusterRoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleBinding"
            }
          }
        },
        "operationId": "replaceClusterRoleBinding",
        "summary": "replace the specified ClusterRoleBinding"
      }
    },
    "/oapi/v1/clusterroles": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRoleList"
            }
          }
        },
        "operationId": "listClusterRole",
        "summary": "list objects of kind ClusterRole"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          }
        },
        "operationId": "createClusterRole",
        "summary": "create a ClusterRole"
      }
    },
    "/oapi/v1/clusterroles/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterRole",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteClusterRole",
        "summary": "delete a ClusterRole"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterRole",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          }
        },
        "operationId": "readClusterRole",
        "summary": "read the specified ClusterRole"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the ClusterRole",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          }
        },
        "operationId": "patchClusterRole",
        "summary": "partially update the specified ClusterRole"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          },
          {
            "description": "name of the ClusterRole",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ClusterRole"
            }
          }
        },
        "operationId": "replaceClusterRole",
        "summary": "replace the specified ClusterRole"
      }
    },
    "/oapi/v1/deploymentconfigrollbacks": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          }
        },
        "operationId": "createDeploymentConfigRollbackForAllNamespaces",
        "summary": "create a DeploymentConfigRollback"
      }
    },
    "/oapi/v1/deploymentconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigList"
            }
          }
        },
        "operationId": "listDeploymentConfigForAllNamespaces",
        "summary": "list or watch objects of kind DeploymentConfig"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "createDeploymentConfigForAllNamespaces",
        "summary": "create a DeploymentConfig"
      }
    },
    "/oapi/v1/egressnetworkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicyList"
            }
          }
        },
        "operationId": "listEgressNetworkPolicyForAllNamespaces",
        "summary": "list or watch objects of kind EgressNetworkPolicy"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        },
        "operationId": "createEgressNetworkPolicyForAllNamespaces",
        "summary": "create an EgressNetworkPolicy"
      }
    },
    "/oapi/v1/groups": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionGroup",
        "summary": "delete collection of Group"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.GroupList"
            }
          }
        },
        "operationId": "listGroup",
        "summary": "list or watch objects of kind Group"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          }
        },
        "operationId": "createGroup",
        "summary": "create a Group"
      }
    },
    "/oapi/v1/groups/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Group",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteGroup",
        "summary": "delete a Group"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the Group",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          }
        },
        "operationId": "readGroup",
        "summary": "read the specified Group"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the Group",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          }
        },
        "operationId": "patchGroup",
        "summary": "partially update the specified Group"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          },
          {
            "description": "name of the Group",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Group"
            }
          }
        },
        "operationId": "replaceGroup",
        "summary": "replace the specified Group"
      }
    },
    "/oapi/v1/hostsubnets": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionHostSubnet",
        "summary": "delete collection of HostSubnet"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.HostSubnetList"
            }
          }
        },
        "operationId": "listHostSubnet",
        "summary": "list or watch objects of kind HostSubnet"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          }
        },
        "operationId": "createHostSubnet",
        "summary": "create a HostSubnet"
      }
    },
    "/oapi/v1/hostsubnets/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the HostSubnet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteHostSubnet",
        "summary": "delete a HostSubnet"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the HostSubnet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          }
        },
        "operationId": "readHostSubnet",
        "summary": "read the specified HostSubnet"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the HostSubnet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          }
        },
        "operationId": "patchHostSubnet",
        "summary": "partially update the specified HostSubnet"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          },
          {
            "description": "name of the HostSubnet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.HostSubnet"
            }
          }
        },
        "operationId": "replaceHostSubnet",
        "summary": "replace the specified HostSubnet"
      }
    },
    "/oapi/v1/identities": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionIdentity",
        "summary": "delete collection of Identity"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.IdentityList"
            }
          }
        },
        "operationId": "listIdentity",
        "summary": "list or watch objects of kind Identity"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          }
        },
        "operationId": "createIdentity",
        "summary": "create an Identity"
      }
    },
    "/oapi/v1/identities/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Identity",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteIdentity",
        "summary": "delete an Identity"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the Identity",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          }
        },
        "operationId": "readIdentity",
        "summary": "read the specified Identity"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the Identity",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          }
        },
        "operationId": "patchIdentity",
        "summary": "partially update the specified Identity"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          },
          {
            "description": "name of the Identity",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Identity"
            }
          }
        },
        "operationId": "replaceIdentity",
        "summary": "replace the specified Identity"
      }
    },
    "/oapi/v1/images": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionImage",
        "summary": "delete collection of Image"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageList"
            }
          }
        },
        "operationId": "listImage",
        "summary": "list or watch objects of kind Image"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          }
        },
        "operationId": "createImage",
        "summary": "create an Image"
      }
    },
    "/oapi/v1/images/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Image",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteImage",
        "summary": "delete an Image"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the Image",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          }
        },
        "operationId": "readImage",
        "summary": "read the specified Image"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the Image",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          }
        },
        "operationId": "patchImage",
        "summary": "partially update the specified Image"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          },
          {
            "description": "name of the Image",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Image"
            }
          }
        },
        "operationId": "replaceImage",
        "summary": "replace the specified Image"
      }
    },
    "/oapi/v1/imagesignatures": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageSignature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageSignature"
            }
          }
        },
        "operationId": "createImageSignature",
        "summary": "create an ImageSignature"
      }
    },
    "/oapi/v1/imagesignatures/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ImageSignature",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteImageSignature",
        "summary": "delete an ImageSignature"
      }
    },
    "/oapi/v1/imagestreamimports": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamImport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamImport"
            }
          }
        },
        "operationId": "createImageStreamImportForAllNamespaces",
        "summary": "create an ImageStreamImport"
      }
    },
    "/oapi/v1/imagestreammappings": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamMapping"
            }
          }
        },
        "operationId": "createImageStreamMappingForAllNamespaces",
        "summary": "create an ImageStreamMapping"
      }
    },
    "/oapi/v1/imagestreams": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamList"
            }
          }
        },
        "operationId": "listImageStreamForAllNamespaces",
        "summary": "list or watch objects of kind ImageStream"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "createImageStreamForAllNamespaces",
        "summary": "create an ImageStream"
      }
    },
    "/oapi/v1/imagestreamtags": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTagList"
            }
          }
        },
        "operationId": "listImageStreamTagForAllNamespaces",
        "summary": "list objects of kind ImageStreamTag"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        },
        "operationId": "createImageStreamTagForAllNamespaces",
        "summary": "create an ImageStreamTag"
      }
    },
    "/oapi/v1/localresourceaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.LocalResourceAccessReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.LocalResourceAccessReview"
            }
          }
        },
        "operationId": "createLocalResourceAccessReviewForAllNamespaces",
        "summary": "create a LocalResourceAccessReview"
      }
    },
    "/oapi/v1/localsubjectaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.LocalSubjectAccessReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.LocalSubjectAccessReview"
            }
          }
        },
        "operationId": "createLocalSubjectAccessReviewForAllNamespaces",
        "summary": "create a LocalSubjectAccessReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/appliedclusterresourcequotas": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.AppliedClusterResourceQuotaList"
            }
          }
        },
        "operationId": "listNamespacedAppliedClusterResourceQuota",
        "summary": "list objects of kind AppliedClusterResourceQuota"
      }
    },
    "/oapi/v1/namespaces/{namespace}/appliedclusterresourcequotas/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the AppliedClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.AppliedClusterResourceQuota"
            }
          }
        },
        "operationId": "readNamespacedAppliedClusterResourceQuota",
        "summary": "read the specified AppliedClusterResourceQuota"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedBuildConfig",
        "summary": "delete collection of BuildConfig"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfigList"
            }
          }
        },
        "operationId": "listNamespacedBuildConfig",
        "summary": "list or watch objects of kind BuildConfig"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        },
        "operationId": "createNamespacedBuildConfig",
        "summary": "create a BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedBuildConfig",
        "summary": "delete a BuildConfig"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        },
        "operationId": "readNamespacedBuildConfig",
        "summary": "read the specified BuildConfig"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        },
        "operationId": "patchNamespacedBuildConfig",
        "summary": "partially update the specified BuildConfig"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildConfig"
            }
          }
        },
        "operationId": "replaceNamespacedBuildConfig",
        "summary": "replace the specified BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs/{name}/instantiate": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildRequest",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "createNamespacedBuildConfigInstantiate",
        "summary": "create instantiate of a BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs/{name}/instantiatebinary": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "description": "asFile determines if the binary should be created as a file within the source rather than extracted as an archive",
            "in": "query",
            "name": "asFile",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.commit is the value identifying a specific commit",
            "in": "query",
            "name": "revision.commit",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.message is the description of a specific commit",
            "in": "query",
            "name": "revision.message",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.authorName of the source control user",
            "in": "query",
            "name": "revision.authorName",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.authorEmail of the source control user",
            "in": "query",
            "name": "revision.authorEmail",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.committerName of the source control user",
            "in": "query",
            "name": "revision.committerName",
            "required": false,
            "type": "string"
          },
          {
            "description": "revision.committerEmail of the source control user",
            "in": "query",
            "name": "revision.committerEmail",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BinaryBuildRequestOptions",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "string"
            }
          }
        },
        "operationId": "connectPostNamespacedBuildConfigInstantiatebinary",
        "summary": "connect POST requests to instantiatebinary of BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "description": "Path is the URL path to use for the current proxy request to pod.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "string"
            }
          }
        },
        "operationId": "connectPostNamespacedBuildConfigWebhooks",
        "summary": "connect POST requests to webhooks of BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/buildconfigs/{name}/webhooks/{path}": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "description": "Path is the URL path to use for the current proxy request to pod.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "path to the resource",
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "string"
            }
          }
        },
        "operationId": "connectPostNamespacedBuildConfigWebhooksWithPath",
        "summary": "connect POST requests to webhooks of BuildConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/builds": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedBuild",
        "summary": "delete collection of Build"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildList"
            }
          }
        },
        "operationId": "listNamespacedBuild",
        "summary": "list or watch objects of kind Build"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "createNamespacedBuild",
        "summary": "create a Build"
      }
    },
    "/oapi/v1/namespaces/{namespace}/builds/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedBuild",
        "summary": "delete a Build"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "readNamespacedBuild",
        "summary": "read the specified Build"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "patchNamespacedBuild",
        "summary": "partially update the specified Build"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "replaceNamespacedBuild",
        "summary": "replace the specified Build"
      }
    },
    "/oapi/v1/namespaces/{namespace}/builds/{name}/clone": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.BuildRequest"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildRequest",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildRequest"
            }
          }
        },
        "operationId": "createNamespacedBuildClone",
        "summary": "create clone of a Build"
      }
    },
    "/oapi/v1/namespaces/{namespace}/builds/{name}/details": {
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Build"
            }
          }
        },
        "operationId": "replaceNamespacedBuildDetails",
        "summary": "replace details of the specified Build"
      }
    },
    "/oapi/v1/namespaces/{namespace}/builds/{name}/log": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "cointainer for which to stream logs. Defaults to only container if there is one container in the pod.",
            "in": "query",
            "name": "container",
            "required": false,
            "type": "string"
          },
          {
            "description": "follow if true indicates that the build log should be streamed until the build terminates.",
            "in": "query",
            "name": "follow",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "previous returns previous build logs. Defaults to false.",
            "in": "query",
            "name": "previous",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "sinceSeconds is a relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.",
            "in": "query",
            "name": "sinceSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "timestamps, If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.",
            "in": "query",
            "name": "timestamps",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "tailLines, If set, is the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime",
            "in": "query",
            "name": "tailLines",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limitBytes, If set, is the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.",
            "in": "query",
            "name": "limitBytes",
            "required": false,
            "type": "integer"
          },
          {
            "description": "noWait if true causes the call to return immediately even if the build is not available yet. Otherwise the server will wait until the build has started.",
            "in": "query",
            "name": "nowait",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "version of the build for which to view logs.",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildLog",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.BuildLog"
            }
          }
        },
        "operationId": "readNamespacedBuildLog",
        "summary": "read log of the specified Build"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigrollbacks": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          }
        },
        "operationId": "createNamespacedDeploymentConfigRollback",
        "summary": "create a DeploymentConfigRollback"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedDeploymentConfig",
        "summary": "delete collection of DeploymentConfig"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigList"
            }
          }
        },
        "operationId": "listNamespacedDeploymentConfig",
        "summary": "list or watch objects of kind DeploymentConfig"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "createNamespacedDeploymentConfig",
        "summary": "create a DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedDeploymentConfig",
        "summary": "delete a DeploymentConfig"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "readNamespacedDeploymentConfig",
        "summary": "read the specified DeploymentConfig"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "patchNamespacedDeploymentConfig",
        "summary": "partially update the specified DeploymentConfig"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "replaceNamespacedDeploymentConfig",
        "summary": "replace the specified DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/instantiate": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentRequest"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentRequest",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentRequest"
            }
          }
        },
        "operationId": "createNamespacedDeploymentConfigInstantiate",
        "summary": "create instantiate of a DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/log": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.",
            "in": "query",
            "name": "container",
            "required": false,
            "type": "string"
          },
          {
            "description": "Follow if true indicates that the build log should be streamed until the build terminates.",
            "in": "query",
            "name": "follow",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Return previous deployment logs. Defaults to false.",
            "in": "query",
            "name": "previous",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.",
            "in": "query",
            "name": "sinceSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.",
            "in": "query",
            "name": "timestamps",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime",
            "in": "query",
            "name": "tailLines",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.",
            "in": "query",
            "name": "limitBytes",
            "required": false,
            "type": "integer"
          },
          {
            "description": "NoWait if true causes the call to return immediately even if the deployment is not available yet. Otherwise the server will wait until the deployment has started.",
            "in": "query",
            "name": "nowait",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Version of the deployment for which to view logs.",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentLog",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentLog"
            }
          }
        },
        "operationId": "readNamespacedDeploymentConfigLog",
        "summary": "read log of the specified DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/rollback": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfigRollback",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfigRollback"
            }
          }
        },
        "operationId": "createNamespacedDeploymentConfigRollback",
        "summary": "create rollback of a DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Scale",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1beta1.Scale"
            }
          }
        },
        "operationId": "readNamespacedDeploymentConfigScale",
        "summary": "read scale of the specified DeploymentConfig"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Scale",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1beta1.Scale"
            }
          }
        },
        "operationId": "patchNamespacedDeploymentConfigScale",
        "summary": "partially update scale of the specified DeploymentConfig"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1.Scale"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Scale",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1beta1.Scale"
            }
          }
        },
        "operationId": "replaceNamespacedDeploymentConfigScale",
        "summary": "replace scale of the specified DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/deploymentconfigs/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "readNamespacedDeploymentConfigStatus",
        "summary": "read status of the specified DeploymentConfig"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "patchNamespacedDeploymentConfigStatus",
        "summary": "partially update status of the specified DeploymentConfig"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.DeploymentConfig"
            }
          }
        },
        "operationId": "replaceNamespacedDeploymentConfigStatus",
        "summary": "replace status of the specified DeploymentConfig"
      }
    },
    "/oapi/v1/namespaces/{namespace}/egressnetworkpolicies": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedEgressNetworkPolicy",
        "summary": "delete collection of EgressNetworkPolicy"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicyList"
            }
          }
        },
        "operationId": "listNamespacedEgressNetworkPolicy",
        "summary": "list or watch objects of kind EgressNetworkPolicy"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        },
        "operationId": "createNamespacedEgressNetworkPolicy",
        "summary": "create an EgressNetworkPolicy"
      }
    },
    "/oapi/v1/namespaces/{namespace}/egressnetworkpolicies/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the EgressNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedEgressNetworkPolicy",
        "summary": "delete an EgressNetworkPolicy"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the EgressNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        },
        "operationId": "readNamespacedEgressNetworkPolicy",
        "summary": "read the specified EgressNetworkPolicy"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the EgressNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        },
        "operationId": "patchNamespacedEgressNetworkPolicy",
        "summary": "partially update the specified EgressNetworkPolicy"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the EgressNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.EgressNetworkPolicy"
            }
          }
        },
        "operationId": "replaceNamespacedEgressNetworkPolicy",
        "summary": "replace the specified EgressNetworkPolicy"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreamimages/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStreamImage",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamImage"
            }
          }
        },
        "operationId": "readNamespacedImageStreamImage",
        "summary": "read the specified ImageStreamImage"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreamimports": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamImport"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamImport"
            }
          }
        },
        "operationId": "createNamespacedImageStreamImport",
        "summary": "create an ImageStreamImport"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreammappings": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamMapping"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamMapping"
            }
          }
        },
        "operationId": "createNamespacedImageStreamMapping",
        "summary": "create an ImageStreamMapping"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreams": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedImageStream",
        "summary": "delete collection of ImageStream"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamList"
            }
          }
        },
        "operationId": "listNamespacedImageStream",
        "summary": "list or watch objects of kind ImageStream"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "createNamespacedImageStream",
        "summary": "create an ImageStream"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreams/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedImageStream",
        "summary": "delete an ImageStream"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "readNamespacedImageStream",
        "summary": "read the specified ImageStream"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "patchNamespacedImageStream",
        "summary": "partially update the specified ImageStream"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "replaceNamespacedImageStream",
        "summary": "replace the specified ImageStream"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreams/{name}/secrets": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the SecretList",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SecretList"
            }
          }
        },
        "operationId": "readNamespacedImageStreamSecrets",
        "summary": "read secrets of the specified ImageStream"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreams/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "readNamespacedImageStreamStatus",
        "summary": "read status of the specified ImageStream"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "patchNamespacedImageStreamStatus",
        "summary": "partially update status of the specified ImageStream"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStream"
            }
          }
        },
        "operationId": "replaceNamespacedImageStreamStatus",
        "summary": "replace status of the specified ImageStream"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreamtags": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTagList"
            }
          }
        },
        "operationId": "listNamespacedImageStreamTag",
        "summary": "list objects of kind ImageStreamTag"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        },
        "operationId": "createNamespacedImageStreamTag",
        "summary": "create an ImageStreamTag"
      }
    },
    "/oapi/v1/namespaces/{namespace}/imagestreamtags/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStreamTag",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedImageStreamTag",
        "summary": "delete an ImageStreamTag"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStreamTag",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        },
        "operationId": "readNamespacedImageStreamTag",
        "summary": "read the specified ImageStreamTag"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStreamTag",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        },
        "operationId": "patchNamespacedImageStreamTag",
        "summary": "partially update the specified ImageStreamTag"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStreamTag",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ImageStreamTag"
            }
          }
        },
        "operationId": "replaceNamespacedImageStreamTag",
        "summary": "replace the specified ImageStreamTag"
      }
    },
    "/oapi/v1/namespaces/{namespace}/localresourceaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.LocalResourceAccessReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.LocalResourceAccessReview"
            }
          }
        },
        "operationId": "createNamespacedLocalResourceAccessReview",
        "summary": "create a LocalResourceAccessReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/localsubjectaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.LocalSubjectAccessReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.LocalSubjectAccessReview"
            }
          }
        },
        "operationId": "createNamespacedLocalSubjectAccessReview",
        "summary": "create a LocalSubjectAccessReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/podsecuritypolicyreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicyReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicyReview"
            }
          }
        },
        "operationId": "createNamespacedPodSecurityPolicyReview",
        "summary": "create a PodSecurityPolicyReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/podsecuritypolicyselfsubjectreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySelfSubjectReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySelfSubjectReview"
            }
          }
        },
        "operationId": "createNamespacedPodSecurityPolicySelfSubjectReview",
        "summary": "create a PodSecurityPolicySelfSubjectReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/podsecuritypolicysubjectreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySubjectReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySubjectReview"
            }
          }
        },
        "operationId": "createNamespacedPodSecurityPolicySubjectReview",
        "summary": "create a PodSecurityPolicySubjectReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/processedtemplates": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "createNamespacedTemplate",
        "summary": "create a Template"
      }
    },
    "/oapi/v1/namespaces/{namespace}/resourceaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ResourceAccessReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ResourceAccessReview"
            }
          }
        },
        "operationId": "createNamespacedResourceAccessReview",
        "summary": "create a ResourceAccessReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/rolebindingrestrictions": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedRoleBindingRestriction",
        "summary": "delete collection of RoleBindingRestriction"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestrictionList"
            }
          }
        },
        "operationId": "listNamespacedRoleBindingRestriction",
        "summary": "list or watch objects of kind RoleBindingRestriction"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        },
        "operationId": "createNamespacedRoleBindingRestriction",
        "summary": "create a RoleBindingRestriction"
      }
    },
    "/oapi/v1/namespaces/{namespace}/rolebindingrestrictions/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBindingRestriction",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedRoleBindingRestriction",
        "summary": "delete a RoleBindingRestriction"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBindingRestriction",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        },
        "operationId": "readNamespacedRoleBindingRestriction",
        "summary": "read the specified RoleBindingRestriction"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBindingRestriction",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        },
        "operationId": "patchNamespacedRoleBindingRestriction",
        "summary": "partially update the specified RoleBindingRestriction"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBindingRestriction",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        },
        "operationId": "replaceNamespacedRoleBindingRestriction",
        "summary": "replace the specified RoleBindingRestriction"
      }
    },
    "/oapi/v1/namespaces/{namespace}/rolebindings": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingList"
            }
          }
        },
        "operationId": "listNamespacedRoleBinding",
        "summary": "list objects of kind RoleBinding"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        },
        "operationId": "createNamespacedRoleBinding",
        "summary": "create a RoleBinding"
      }
    },
    "/oapi/v1/namespaces/{namespace}/rolebindings/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedRoleBinding",
        "summary": "delete a RoleBinding"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        },
        "operationId": "readNamespacedRoleBinding",
        "summary": "read the specified RoleBinding"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        },
        "operationId": "patchNamespacedRoleBinding",
        "summary": "partially update the specified RoleBinding"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBinding",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        },
        "operationId": "replaceNamespacedRoleBinding",
        "summary": "replace the specified RoleBinding"
      }
    },
    "/oapi/v1/namespaces/{namespace}/roles": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleList"
            }
          }
        },
        "operationId": "listNamespacedRole",
        "summary": "list objects of kind Role"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        },
        "operationId": "createNamespacedRole",
        "summary": "create a Role"
      }
    },
    "/oapi/v1/namespaces/{namespace}/roles/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Role",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedRole",
        "summary": "delete a Role"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Role",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        },
        "operationId": "readNamespacedRole",
        "summary": "read the specified Role"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Role",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        },
        "operationId": "patchNamespacedRole",
        "summary": "partially update the specified Role"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Role",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        },
        "operationId": "replaceNamespacedRole",
        "summary": "replace the specified Role"
      }
    },
    "/oapi/v1/namespaces/{namespace}/routes": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedRoute",
        "summary": "delete collection of Route"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RouteList"
            }
          }
        },
        "operationId": "listNamespacedRoute",
        "summary": "list or watch objects of kind Route"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "createNamespacedRoute",
        "summary": "create a Route"
      }
    },
    "/oapi/v1/namespaces/{namespace}/routes/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedRoute",
        "summary": "delete a Route"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "readNamespacedRoute",
        "summary": "read the specified Route"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "patchNamespacedRoute",
        "summary": "partially update the specified Route"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "replaceNamespacedRoute",
        "summary": "replace the specified Route"
      }
    },
    "/oapi/v1/namespaces/{namespace}/routes/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "readNamespacedRouteStatus",
        "summary": "read status of the specified Route"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "patchNamespacedRouteStatus",
        "summary": "partially update status of the specified Route"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "replaceNamespacedRouteStatus",
        "summary": "replace status of the specified Route"
      }
    },
    "/oapi/v1/namespaces/{namespace}/selfsubjectrulesreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SelfSubjectRulesReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SelfSubjectRulesReview"
            }
          }
        },
        "operationId": "createNamespacedSelfSubjectRulesReview",
        "summary": "create a SelfSubjectRulesReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/subjectaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SubjectAccessReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SubjectAccessReview"
            }
          }
        },
        "operationId": "createNamespacedSubjectAccessReview",
        "summary": "create a SubjectAccessReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/subjectrulesreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SubjectRulesReview"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SubjectRulesReview"
            }
          }
        },
        "operationId": "createNamespacedSubjectRulesReview",
        "summary": "create a SubjectRulesReview"
      }
    },
    "/oapi/v1/namespaces/{namespace}/templates": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNamespacedTemplate",
        "summary": "delete collection of Template"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.TemplateList"
            }
          }
        },
        "operationId": "listNamespacedTemplate",
        "summary": "list or watch objects of kind Template"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "createNamespacedTemplate",
        "summary": "create a Template"
      }
    },
    "/oapi/v1/namespaces/{namespace}/templates/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNamespacedTemplate",
        "summary": "delete a Template"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "readNamespacedTemplate",
        "summary": "read the specified Template"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "patchNamespacedTemplate",
        "summary": "partially update the specified Template"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "replaceNamespacedTemplate",
        "summary": "replace the specified Template"
      }
    },
    "/oapi/v1/netnamespaces": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionNetNamespace",
        "summary": "delete collection of NetNamespace"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.NetNamespaceList"
            }
          }
        },
        "operationId": "listNetNamespace",
        "summary": "list or watch objects of kind NetNamespace"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          }
        },
        "operationId": "createNetNamespace",
        "summary": "create a NetNamespace"
      }
    },
    "/oapi/v1/netnamespaces/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the NetNamespace",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteNetNamespace",
        "summary": "delete a NetNamespace"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the NetNamespace",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          }
        },
        "operationId": "readNetNamespace",
        "summary": "read the specified NetNamespace"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the NetNamespace",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          }
        },
        "operationId": "patchNetNamespace",
        "summary": "partially update the specified NetNamespace"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          },
          {
            "description": "name of the NetNamespace",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.NetNamespace"
            }
          }
        },
        "operationId": "replaceNetNamespace",
        "summary": "replace the specified NetNamespace"
      }
    },
    "/oapi/v1/oauthaccesstokens": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionOAuthAccessToken",
        "summary": "delete collection of OAuthAccessToken"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessTokenList"
            }
          }
        },
        "operationId": "listOAuthAccessToken",
        "summary": "list or watch objects of kind OAuthAccessToken"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          }
        },
        "operationId": "createOAuthAccessToken",
        "summary": "create an OAuthAccessToken"
      }
    },
    "/oapi/v1/oauthaccesstokens/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthAccessToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteOAuthAccessToken",
        "summary": "delete an OAuthAccessToken"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the OAuthAccessToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          }
        },
        "operationId": "readOAuthAccessToken",
        "summary": "read the specified OAuthAccessToken"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the OAuthAccessToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          }
        },
        "operationId": "patchOAuthAccessToken",
        "summary": "partially update the specified OAuthAccessToken"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          },
          {
            "description": "name of the OAuthAccessToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAccessToken"
            }
          }
        },
        "operationId": "replaceOAuthAccessToken",
        "summary": "replace the specified OAuthAccessToken"
      }
    },
    "/oapi/v1/oauthauthorizetokens": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionOAuthAuthorizeToken",
        "summary": "delete collection of OAuthAuthorizeToken"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeTokenList"
            }
          }
        },
        "operationId": "listOAuthAuthorizeToken",
        "summary": "list or watch objects of kind OAuthAuthorizeToken"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          }
        },
        "operationId": "createOAuthAuthorizeToken",
        "summary": "create an OAuthAuthorizeToken"
      }
    },
    "/oapi/v1/oauthauthorizetokens/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthAuthorizeToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteOAuthAuthorizeToken",
        "summary": "delete an OAuthAuthorizeToken"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the OAuthAuthorizeToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          }
        },
        "operationId": "readOAuthAuthorizeToken",
        "summary": "read the specified OAuthAuthorizeToken"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the OAuthAuthorizeToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          }
        },
        "operationId": "patchOAuthAuthorizeToken",
        "summary": "partially update the specified OAuthAuthorizeToken"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          },
          {
            "description": "name of the OAuthAuthorizeToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizeToken"
            }
          }
        },
        "operationId": "replaceOAuthAuthorizeToken",
        "summary": "replace the specified OAuthAuthorizeToken"
      }
    },
    "/oapi/v1/oauthclientauthorizations": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionOAuthClientAuthorization",
        "summary": "delete collection of OAuthClientAuthorization"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorizationList"
            }
          }
        },
        "operationId": "listOAuthClientAuthorization",
        "summary": "list or watch objects of kind OAuthClientAuthorization"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          }
        },
        "operationId": "createOAuthClientAuthorization",
        "summary": "create an OAuthClientAuthorization"
      }
    },
    "/oapi/v1/oauthclientauthorizations/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthClientAuthorization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteOAuthClientAuthorization",
        "summary": "delete an OAuthClientAuthorization"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the OAuthClientAuthorization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          }
        },
        "operationId": "readOAuthClientAuthorization",
        "summary": "read the specified OAuthClientAuthorization"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the OAuthClientAuthorization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          }
        },
        "operationId": "patchOAuthClientAuthorization",
        "summary": "partially update the specified OAuthClientAuthorization"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          },
          {
            "description": "name of the OAuthClientAuthorization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientAuthorization"
            }
          }
        },
        "operationId": "replaceOAuthClientAuthorization",
        "summary": "replace the specified OAuthClientAuthorization"
      }
    },
    "/oapi/v1/oauthclients": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionOAuthClient",
        "summary": "delete collection of OAuthClient"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClientList"
            }
          }
        },
        "operationId": "listOAuthClient",
        "summary": "list or watch objects of kind OAuthClient"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          }
        },
        "operationId": "createOAuthClient",
        "summary": "create an OAuthClient"
      }
    },
    "/oapi/v1/oauthclients/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthClient",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteOAuthClient",
        "summary": "delete an OAuthClient"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the OAuthClient",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          }
        },
        "operationId": "readOAuthClient",
        "summary": "read the specified OAuthClient"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the OAuthClient",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          }
        },
        "operationId": "patchOAuthClient",
        "summary": "partially update the specified OAuthClient"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          },
          {
            "description": "name of the OAuthClient",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.OAuthClient"
            }
          }
        },
        "operationId": "replaceOAuthClient",
        "summary": "replace the specified OAuthClient"
      }
    },
    "/oapi/v1/podsecuritypolicyreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicyReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicyReview"
            }
          }
        },
        "operationId": "createPodSecurityPolicyReviewForAllNamespaces",
        "summary": "create a PodSecurityPolicyReview"
      }
    },
    "/oapi/v1/podsecuritypolicyselfsubjectreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySelfSubjectReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySelfSubjectReview"
            }
          }
        },
        "operationId": "createPodSecurityPolicySelfSubjectReviewForAllNamespaces",
        "summary": "create a PodSecurityPolicySelfSubjectReview"
      }
    },
    "/oapi/v1/podsecuritypolicysubjectreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySubjectReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.PodSecurityPolicySubjectReview"
            }
          }
        },
        "operationId": "createPodSecurityPolicySubjectReviewForAllNamespaces",
        "summary": "create a PodSecurityPolicySubjectReview"
      }
    },
    "/oapi/v1/processedtemplates": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "createTemplateForAllNamespaces",
        "summary": "create a Template"
      }
    },
    "/oapi/v1/projectrequests": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "listProjectRequest",
        "summary": "list objects of kind ProjectRequest"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ProjectRequest"
            }
          }
        },
        "operationId": "createProjectRequest",
        "summary": "create a ProjectRequest"
      }
    },
    "/oapi/v1/projects": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ProjectList"
            }
          }
        },
        "operationId": "listProject",
        "summary": "list or watch objects of kind Project"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          }
        },
        "operationId": "createProject",
        "summary": "create a Project"
      }
    },
    "/oapi/v1/projects/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Project",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteProject",
        "summary": "delete a Project"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Project",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          }
        },
        "operationId": "readProject",
        "summary": "read the specified Project"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the Project",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          }
        },
        "operationId": "patchProject",
        "summary": "partially update the specified Project"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          },
          {
            "description": "name of the Project",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Project"
            }
          }
        },
        "operationId": "replaceProject",
        "summary": "replace the specified Project"
      }
    },
    "/oapi/v1/resourceaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ResourceAccessReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.ResourceAccessReview"
            }
          }
        },
        "operationId": "createResourceAccessReviewForAllNamespaces",
        "summary": "create a ResourceAccessReview"
      }
    },
    "/oapi/v1/rolebindingrestrictions": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestrictionList"
            }
          }
        },
        "operationId": "listRoleBindingRestrictionForAllNamespaces",
        "summary": "list or watch objects of kind RoleBindingRestriction"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingRestriction"
            }
          }
        },
        "operationId": "createRoleBindingRestrictionForAllNamespaces",
        "summary": "create a RoleBindingRestriction"
      }
    },
    "/oapi/v1/rolebindings": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBindingList"
            }
          }
        },
        "operationId": "listRoleBindingForAllNamespaces",
        "summary": "list objects of kind RoleBinding"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleBinding"
            }
          }
        },
        "operationId": "createRoleBindingForAllNamespaces",
        "summary": "create a RoleBinding"
      }
    },
    "/oapi/v1/roles": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RoleList"
            }
          }
        },
        "operationId": "listRoleForAllNamespaces",
        "summary": "list objects of kind Role"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Role"
            }
          }
        },
        "operationId": "createRoleForAllNamespaces",
        "summary": "create a Role"
      }
    },
    "/oapi/v1/routes": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.RouteList"
            }
          }
        },
        "operationId": "listRouteForAllNamespaces",
        "summary": "list or watch objects of kind Route"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Route"
            }
          }
        },
        "operationId": "createRouteForAllNamespaces",
        "summary": "create a Route"
      }
    },
    "/oapi/v1/selfsubjectrulesreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SelfSubjectRulesReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SelfSubjectRulesReview"
            }
          }
        },
        "operationId": "createSelfSubjectRulesReviewForAllNamespaces",
        "summary": "create a SelfSubjectRulesReview"
      }
    },
    "/oapi/v1/subjectaccessreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SubjectAccessReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SubjectAccessReview"
            }
          }
        },
        "operationId": "createSubjectAccessReviewForAllNamespaces",
        "summary": "create a SubjectAccessReview"
      }
    },
    "/oapi/v1/subjectrulesreviews": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SubjectRulesReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.SubjectRulesReview"
            }
          }
        },
        "operationId": "createSubjectRulesReviewForAllNamespaces",
        "summary": "create a SubjectRulesReview"
      }
    },
    "/oapi/v1/templates": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.TemplateList"
            }
          }
        },
        "operationId": "listTemplateForAllNamespaces",
        "summary": "list or watch objects of kind Template"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Template"
            }
          }
        },
        "operationId": "createTemplateForAllNamespaces",
        "summary": "create a Template"
      }
    },
    "/oapi/v1/useridentitymappings": {
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          }
        },
        "operationId": "createUserIdentityMapping",
        "summary": "create an UserIdentityMapping"
      }
    },
    "/oapi/v1/useridentitymappings/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the UserIdentityMapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteUserIdentityMapping",
        "summary": "delete an UserIdentityMapping"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the UserIdentityMapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          }
        },
        "operationId": "readUserIdentityMapping",
        "summary": "read the specified UserIdentityMapping"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the UserIdentityMapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          }
        },
        "operationId": "patchUserIdentityMapping",
        "summary": "partially update the specified UserIdentityMapping"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          },
          {
            "description": "name of the UserIdentityMapping",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.UserIdentityMapping"
            }
          }
        },
        "operationId": "replaceUserIdentityMapping",
        "summary": "replace the specified UserIdentityMapping"
      }
    },
    "/oapi/v1/users": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deletecollectionUser",
        "summary": "delete collection of User"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.UserList"
            }
          }
        },
        "operationId": "listUser",
        "summary": "list or watch objects of kind User"
      },
      "post": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          }
        },
        "operationId": "createUser",
        "summary": "create an User"
      }
    },
    "/oapi/v1/users/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DeleteOptions"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
            "in": "query",
            "name": "propagationPolicy",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the User",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.Status"
            }
          }
        },
        "operationId": "deleteUser",
        "summary": "delete an User"
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "name of the User",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          }
        },
        "operationId": "readUser",
        "summary": "read the specified User"
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.Patch"
            }
          },
          {
            "description": "name of the User",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          }
        },
        "operationId": "patchUser",
        "summary": "partially update the specified User"
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          },
          {
            "description": "name of the User",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.User"
            }
          }
        },
        "operationId": "replaceUser",
        "summary": "replace the specified User"
      }
    },
    "/oapi/v1/watch/buildconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchBuildConfigListForAllNamespaces",
        "summary": "watch individual changes to a list of BuildConfig"
      }
    },
    "/oapi/v1/watch/builds": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchBuildListForAllNamespaces",
        "summary": "watch individual changes to a list of Build"
      }
    },
    "/oapi/v1/watch/clusternetworks": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchClusterNetworkList",
        "summary": "watch individual changes to a list of ClusterNetwork"
      }
    },
    "/oapi/v1/watch/clusternetworks/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterNetwork",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchClusterNetwork",
        "summary": "watch changes to an object of kind ClusterNetwork"
      }
    },
    "/oapi/v1/watch/clusterresourcequotas": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchClusterResourceQuotaList",
        "summary": "watch individual changes to a list of ClusterResourceQuota"
      }
    },
    "/oapi/v1/watch/clusterresourcequotas/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the ClusterResourceQuota",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchClusterResourceQuota",
        "summary": "watch changes to an object of kind ClusterResourceQuota"
      }
    },
    "/oapi/v1/watch/deploymentconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchDeploymentConfigListForAllNamespaces",
        "summary": "watch individual changes to a list of DeploymentConfig"
      }
    },
    "/oapi/v1/watch/egressnetworkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchEgressNetworkPolicyListForAllNamespaces",
        "summary": "watch individual changes to a list of EgressNetworkPolicy"
      }
    },
    "/oapi/v1/watch/groups": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchGroupList",
        "summary": "watch individual changes to a list of Group"
      }
    },
    "/oapi/v1/watch/groups/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Group",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchGroup",
        "summary": "watch changes to an object of kind Group"
      }
    },
    "/oapi/v1/watch/hostsubnets": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchHostSubnetList",
        "summary": "watch individual changes to a list of HostSubnet"
      }
    },
    "/oapi/v1/watch/hostsubnets/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the HostSubnet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchHostSubnet",
        "summary": "watch changes to an object of kind HostSubnet"
      }
    },
    "/oapi/v1/watch/identities": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchIdentityList",
        "summary": "watch individual changes to a list of Identity"
      }
    },
    "/oapi/v1/watch/identities/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Identity",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchIdentity",
        "summary": "watch changes to an object of kind Identity"
      }
    },
    "/oapi/v1/watch/images": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchImageList",
        "summary": "watch individual changes to a list of Image"
      }
    },
    "/oapi/v1/watch/images/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Image",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchImage",
        "summary": "watch changes to an object of kind Image"
      }
    },
    "/oapi/v1/watch/imagestreams": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchImageStreamListForAllNamespaces",
        "summary": "watch individual changes to a list of ImageStream"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/buildconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedBuildConfigList",
        "summary": "watch individual changes to a list of BuildConfig"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/buildconfigs/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the BuildConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedBuildConfig",
        "summary": "watch changes to an object of kind BuildConfig"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/builds": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedBuildList",
        "summary": "watch individual changes to a list of Build"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/builds/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Build",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedBuild",
        "summary": "watch changes to an object of kind Build"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/deploymentconfigs": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedDeploymentConfigList",
        "summary": "watch individual changes to a list of DeploymentConfig"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/deploymentconfigs/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the DeploymentConfig",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedDeploymentConfig",
        "summary": "watch changes to an object of kind DeploymentConfig"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/egressnetworkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedEgressNetworkPolicyList",
        "summary": "watch individual changes to a list of EgressNetworkPolicy"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/egressnetworkpolicies/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the EgressNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedEgressNetworkPolicy",
        "summary": "watch changes to an object of kind EgressNetworkPolicy"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/imagestreams": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedImageStreamList",
        "summary": "watch individual changes to a list of ImageStream"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/imagestreams/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the ImageStream",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedImageStream",
        "summary": "watch changes to an object of kind ImageStream"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/rolebindingrestrictions": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedRoleBindingRestrictionList",
        "summary": "watch individual changes to a list of RoleBindingRestriction"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/rolebindingrestrictions/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the RoleBindingRestriction",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedRoleBindingRestriction",
        "summary": "watch changes to an object of kind RoleBindingRestriction"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/routes": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedRouteList",
        "summary": "watch individual changes to a list of Route"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/routes/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Route",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedRoute",
        "summary": "watch changes to an object of kind Route"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/templates": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedTemplateList",
        "summary": "watch individual changes to a list of Template"
      }
    },
    "/oapi/v1/watch/namespaces/{namespace}/templates/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "name of the Template",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNamespacedTemplate",
        "summary": "watch changes to an object of kind Template"
      }
    },
    "/oapi/v1/watch/netnamespaces": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNetNamespaceList",
        "summary": "watch individual changes to a list of NetNamespace"
      }
    },
    "/oapi/v1/watch/netnamespaces/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the NetNamespace",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchNetNamespace",
        "summary": "watch changes to an object of kind NetNamespace"
      }
    },
    "/oapi/v1/watch/oauthaccesstokens": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthAccessTokenList",
        "summary": "watch individual changes to a list of OAuthAccessToken"
      }
    },
    "/oapi/v1/watch/oauthaccesstokens/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthAccessToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthAccessToken",
        "summary": "watch changes to an object of kind OAuthAccessToken"
      }
    },
    "/oapi/v1/watch/oauthauthorizetokens": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthAuthorizeTokenList",
        "summary": "watch individual changes to a list of OAuthAuthorizeToken"
      }
    },
    "/oapi/v1/watch/oauthauthorizetokens/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthAuthorizeToken",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthAuthorizeToken",
        "summary": "watch changes to an object of kind OAuthAuthorizeToken"
      }
    },
    "/oapi/v1/watch/oauthclientauthorizations": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthClientAuthorizationList",
        "summary": "watch individual changes to a list of OAuthClientAuthorization"
      }
    },
    "/oapi/v1/watch/oauthclientauthorizations/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthClientAuthorization",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthClientAuthorization",
        "summary": "watch changes to an object of kind OAuthClientAuthorization"
      }
    },
    "/oapi/v1/watch/oauthclients": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthClientList",
        "summary": "watch individual changes to a list of OAuthClient"
      }
    },
    "/oapi/v1/watch/oauthclients/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the OAuthClient",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchOAuthClient",
        "summary": "watch changes to an object of kind OAuthClient"
      }
    },
    "/oapi/v1/watch/projects": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchProjectList",
        "summary": "watch individual changes to a list of Project"
      }
    },
    "/oapi/v1/watch/projects/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the Project",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchProject",
        "summary": "watch changes to an object of kind Project"
      }
    },
    "/oapi/v1/watch/rolebindingrestrictions": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchRoleBindingRestrictionListForAllNamespaces",
        "summary": "watch individual changes to a list of RoleBindingRestriction"
      }
    },
    "/oapi/v1/watch/routes": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchRouteListForAllNamespaces",
        "summary": "watch individual changes to a list of Route"
      }
    },
    "/oapi/v1/watch/templates": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchTemplateListForAllNamespaces",
        "summary": "watch individual changes to a list of Template"
      }
    },
    "/oapi/v1/watch/users": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchUserList",
        "summary": "watch individual changes to a list of User"
      }
    },
    "/oapi/v1/watch/users/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Timeout for the list/watch call.",
            "in": "query",
            "name": "timeoutSeconds",
            "required": false,
            "type": "integer"
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "required": false,
            "type": "string"
          },
          {
            "description": "name of the User",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1.WatchEvent"
            }
          }
        },
        "operationId": "watchUser",
        "summary": "watch changes to an object of kind User"
      }
    }
  },
  "definitions": {
    "patch.Object": {
      "description": "represents an object patch, which may be any of: JSON patch (RFC 6902), JSON merge patch (RFC 7396), or the Kubernetes strategic merge patch"
    },
    "runtime.RawExtension": {
      "description": "this may be any JSON object with a 'kind' and 'apiVersion' field; and is preserved unmodified by processing"
    },
    "types.UID": {},
    "v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string"
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string"
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean"
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      },
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ]
    },
    "v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "items": {
            "$ref": "#/definitions/v1.APIResource"
          },
          "type": "array"
        }
      },
      "required": [
        "groupVersion",
        "resources"
      ]
    },
    "v1.AWSElasticBlockStoreVolumeSource": {
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "boolean"
        },
        "volumeID": {
          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ]
    },
    "v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/v1.NodeAffinity",
          "description": "Describes node affinity scheduling rules for the pod."
        },
        "podAffinity": {
          "$ref": "#/definitions/v1.PodAffinity",
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/v1.PodAntiAffinity",
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
        }
      }
    },
    "v1.AppliedClusterResourceQuota": {
      "description": "AppliedClusterResourceQuota mirrors ClusterResourceQuota at a project scope, for projection into a project.  It allows a project-admin to know which ClusterResourceQuotas are applied to his project and their associated usage.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.ClusterResourceQuotaSpec",
          "description": "Spec defines the desired quota"
        },
        "status": {
          "$ref": "#/definitions/v1.ClusterResourceQuotaStatus",
          "description": "Status defines the actual enforced quota and its current usage"
        }
      },
      "required": [
        "metadata",
        "spec"
      ]
    },
    "v1.AppliedClusterResourceQuotaList": {
      "description": "AppliedClusterResourceQuotaList is a collection of AppliedClusterResourceQuotas",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of AppliedClusterResourceQuota",
          "items": {
            "$ref": "#/definitions/v1.AppliedClusterResourceQuota"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.AzureDataDiskCachingMode": {},
    "v1.AzureDataDiskKind": {},
    "v1.AzureDiskVolumeSource": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "properties": {
        "cachingMode": {
          "$ref": "#/definitions/v1.AzureDataDiskCachingMode",
          "description": "Host Caching mode: None, Read Only, Read Write."
        },
        "diskName": {
          "description": "The Name of the data disk in the blob storage",
          "type": "string"
        },
        "diskURI": {
          "description": "The URI the data disk in the blob storage",
          "type": "string"
        },
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/v1.AzureDataDiskKind",
          "description": "Expected values Shared: mulitple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        }
      },
      "required": [
        "diskName",
        "diskURI"
      ]
    },
    "v1.AzureFileVolumeSource": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "properties": {
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretName": {
          "description": "the name of secret that contains Azure Storage Account Name and Key",
          "type": "string"
        },
        "shareName": {
          "description": "Share Name",
          "type": "string"
        }
      },
      "required": [
        "secretName",
        "shareName"
      ]
    },
    "v1.BinaryBuildSource": {
      "description": "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source.",
      "properties": {
        "asFile": {
          "description": "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'.",
          "type": "string"
        }
      }
    },
    "v1.BitbucketWebHookCause": {
      "description": "BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build.",
      "properties": {
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "Revision is the git source revision information of the trigger."
        },
        "secret": {
          "description": "Secret is the obfuscated webhook secret that triggered a build.",
          "type": "string"
        }
      }
    },
    "v1.Build": {
      "description": "Build encapsulates the inputs needed to produce a new deployable image, as well as the status of the execution and a reference to the Pod which executed the build.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.BuildSpec",
          "description": "spec is all the inputs used to execute the build."
        },
        "status": {
          "$ref": "#/definitions/v1.BuildStatus",
          "description": "status is the current status of the build."
        }
      }
    },
    "v1.BuildConfig": {
      "description": "Build configurations define a build process for new Docker images. There are three types of builds possible - a Docker build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary Docker images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the Docker registry specified in the \"output\" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created.\n\nEach build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have \"output\" set can be used to test code or run a verification build.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "metadata for BuildConfig."
        },
        "spec": {
          "$ref": "#/definitions/v1.BuildConfigSpec",
          "description": "spec holds all the input necessary to produce a new build, and the conditions when to trigger them."
        },
        "status": {
          "$ref": "#/definitions/v1.BuildConfigStatus",
          "description": "status holds any relevant information about a build config"
        }
      },
      "required": [
        "spec",
        "status"
      ]
    },
    "v1.BuildConfigList": {
      "description": "BuildConfigList is a collection of BuildConfigs.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of build configs",
          "items": {
            "$ref": "#/definitions/v1.BuildConfig"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "metadata for BuildConfigList."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.BuildConfigSpec": {
      "description": "BuildConfigSpec describes when and how builds are created",
      "properties": {
        "completionDeadlineSeconds": {
          "description": "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer",
          "format": "int64",
          "type": "integer"
        },
        "failedBuildsHistoryLimit": {
          "description": "failedBuildsHistoryLimit is the number of old failed builds to retain. If not specified, all failed builds are retained.",
          "format": "int32",
          "type": "integer"
        },
        "nodeSelector": {
          "description": "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored.",
          "type": "object"
        },
        "output": {
          "$ref": "#/definitions/v1.BuildOutput",
          "description": "output describes the Docker image the Strategy should produce."
        },
        "postCommit": {
          "$ref": "#/definitions/v1.BuildPostCommitSpec",
          "description": "postCommit is a build hook executed after the build output image is committed, before it is pushed to a registry."
        },
        "resources": {
          "$ref": "#/definitions/v1.ResourceRequirements",
          "description": "resources computes resource requirements to execute the build."
        },
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "revision is the information from the source for a specific repo snapshot. This is optional."
        },
        "runPolicy": {
          "description": "RunPolicy describes how the new build created from this build configuration will be scheduled for execution. This is optional, if not specified we default to \"Serial\".",
          "type": "string"
        },
        "serviceAccount": {
          "description": "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1.BuildSource",
          "description": "source describes the SCM in use."
        },
        "strategy": {
          "$ref": "#/definitions/v1.BuildStrategy",
          "description": "strategy defines how to perform a build."
        },
        "successfulBuildsHistoryLimit": {
          "description": "successfulBuildsHistoryLimit is the number of old successful builds to retain. If not specified, all successful builds are retained.",
          "format": "int32",
          "type": "integer"
        },
        "triggers": {
          "description": "triggers determine how new Builds can be launched from a BuildConfig. If no triggers are defined, a new build can only occur as a result of an explicit client build creation.",
          "items": {
            "$ref": "#/definitions/v1.BuildTriggerPolicy"
          },
          "type": "array"
        }
      },
      "required": [
        "triggers",
        "strategy",
        "nodeSelector"
      ]
    },
    "v1.BuildConfigStatus": {
      "description": "BuildConfigStatus contains current state of the build config object.",
      "properties": {
        "lastVersion": {
          "description": "lastVersion is used to inform about number of last triggered build.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "lastVersion"
      ]
    },
    "v1.BuildList": {
      "description": "BuildList is a collection of Builds.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of builds",
          "items": {
            "$ref": "#/definitions/v1.Build"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "metadata for BuildList."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.BuildLog": {
      "description": "BuildLog is the (unused) resource associated with the build log redirector",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        }
      }
    },
    "v1.BuildOutput": {
      "description": "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce.",
      "properties": {
        "imageLabels": {
          "description": "imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used.",
          "items": {
            "$ref": "#/definitions/v1.ImageLabel"
          },
          "type": "array"
        },
        "pushSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "PushSecret is the name of a Secret that would be used for setting up the authentication for executing the Docker push to authentication enabled Docker Registry (or Docker Hub)."
        },
        "to": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "to defines an optional location to push the output of this build to. Kind must be one of 'ImageStreamTag' or 'DockerImage'. This value will be used to look up a Docker image repository to push to. In the case of an ImageStreamTag, the ImageStreamTag will be looked for in the namespace of the build unless Namespace is specified."
        }
      }
    },
    "v1.BuildPostCommitSpec": {
      "description": "A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.\n\nThe build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.\n\nThere are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.\n\n1. Shell script:\n\n       \"postCommit\": {\n         \"script\": \"rake test --verbose\",\n       }\n\n    The above is a convenient form which is equivalent to:\n\n       \"postCommit\": {\n         \"command\": [\"/bin/sh\", \"-ic\"],\n         \"args\":    [\"rake test --verbose\"]\n       }\n\n2. A command as the image entrypoint:\n\n       \"postCommit\": {\n         \"commit\": [\"rake\", \"test\", \"--verbose\"]\n       }\n\n    Command overrides the image entrypoint in the exec form, as documented in\n    Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.\n\n3. Pass arguments to the default entrypoint:\n\n       \"postCommit\": {\n\t\t      \"args\": [\"rake\", \"test\", \"--verbose\"]\n\t      }\n\n    This form is only useful if the image entrypoint can handle arguments.\n\n4. Shell script with arguments:\n\n       \"postCommit\": {\n         \"script\": \"rake test $1\",\n         \"args\":   [\"--verbose\"]\n       }\n\n    This form is useful if you need to pass arguments that would otherwise be\n    hard to quote properly in the shell script. In the script, $0 will be\n    \"/bin/sh\" and $1, $2, etc, are the positional arguments from Args.\n\n5. Command with arguments:\n\n       \"postCommit\": {\n         \"command\": [\"rake\", \"test\"],\n         \"args\":    [\"--verbose\"]\n       }\n\n    This form is equivalent to appending the arguments to the Command slice.\n\nIt is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.",
      "properties": {
        "args": {
          "description": "args is a list of arguments that are provided to either Command, Script or the Docker image's default entrypoint. The arguments are placed immediately after the command to be run.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "description": "command is the command to run. It may not be specified with Script. This might be needed if the image doesn't have `/bin/sh`, or if you do not want to use a shell. In all other cases, using Script might be more convenient.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "script": {
          "description": "script is a shell script to be run with `/bin/sh -ic`. It may not be specified with Command. Use Script when a shell script is appropriate to execute the post build hook, for example for running unit tests with `rake test`. If you need control over the image entrypoint, or if the image does not have `/bin/sh`, use Command and/or Args. The `-i` flag is needed to support CentOS and RHEL images that use Software Collections (SCL), in order to have the appropriate collections enabled in the shell. E.g., in the Ruby image, this is necessary to make `ruby`, `bundle` and other binaries available in the PATH.",
          "type": "string"
        }
      }
    },
    "v1.BuildRequest": {
      "description": "BuildRequest is the resource used to pass parameters to build generator",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "binary": {
          "$ref": "#/definitions/v1.BinaryBuildSource",
          "description": "binary indicates a request to build from a binary provided to the builder"
        },
        "dockerStrategyOptions": {
          "$ref": "#/definitions/v1.DockerStrategyOptions",
          "description": "DockerStrategyOptions contains additional docker-strategy specific options for the build"
        },
        "env": {
          "description": "env contains additional environment variables you want to pass into a builder container.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is the reference to the ImageStreamTag that triggered the build."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "lastVersion": {
          "description": "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated.",
          "format": "int64",
          "type": "integer"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "metadata for BuildRequest."
        },
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "revision is the information from the source for a specific repo snapshot."
        },
        "sourceStrategyOptions": {
          "$ref": "#/definitions/v1.SourceStrategyOptions",
          "description": "SourceStrategyOptions contains additional source-strategy specific options for the build"
        },
        "triggeredBy": {
          "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers.",
          "items": {
            "$ref": "#/definitions/v1.BuildTriggerCause"
          },
          "type": "array"
        },
        "triggeredByImage": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "triggeredByImage is the Image that triggered this build."
        }
      },
      "required": [
        "triggeredBy"
      ]
    },
    "v1.BuildSource": {
      "description": "BuildSource is the SCM used for the build.",
      "properties": {
        "binary": {
          "$ref": "#/definitions/v1.BinaryBuildSource",
          "description": "binary builds accept a binary as their input. The binary is generally assumed to be a tar, gzipped tar, or zip file depending on the strategy. For Docker builds, this is the build context and an optional Dockerfile may be specified to override any Dockerfile in the build context. For Source builds, this is assumed to be an archive as described above. For Source and Docker builds, if binary.asFile is set the build will receive a directory with a single file. contextDir may be used when an archive is provided. Custom builds will receive this binary as input on STDIN."
        },
        "contextDir": {
          "description": "contextDir specifies the sub-directory where the source code for the application exists. This allows to have buildable sources in directory other than root of repository.",
          "type": "string"
        },
        "dockerfile": {
          "description": "dockerfile is the raw contents of a Dockerfile which should be built. When this option is specified, the FROM may be modified based on your strategy base image and additional ENV stanzas from your strategy environment will be added after the FROM, but before the rest of your Dockerfile stanzas. The Dockerfile source type may be used with other options like git - in those cases the Git repo will have any innate Dockerfile replaced in the context dir.",
          "type": "string"
        },
        "git": {
          "$ref": "#/definitions/v1.GitBuildSource",
          "description": "git contains optional information about git build source"
        },
        "images": {
          "description": "images describes a set of images to be used to provide source for the build",
          "items": {
            "$ref": "#/definitions/v1.ImageSource"
          },
          "type": "array"
        },
        "secrets": {
          "description": "secrets represents a list of secrets and their destinations that will be used only for the build.",
          "items": {
            "$ref": "#/definitions/v1.SecretBuildSource"
          },
          "type": "array"
        },
        "sourceSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "sourceSecret is the name of a Secret that would be used for setting up the authentication for cloning private repository. The secret contains valid credentials for remote repository, where the data's key represent the authentication method to be used and value is the base64 encoded credentials. Supported auth methods are: ssh-privatekey."
        },
        "type": {
          "description": "type of build input to accept",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.BuildSpec": {
      "description": "BuildSpec has the information to represent a build and also additional information about a build",
      "properties": {
        "completionDeadlineSeconds": {
          "description": "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer",
          "format": "int64",
          "type": "integer"
        },
        "nodeSelector": {
          "description": "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored.",
          "type": "object"
        },
        "output": {
          "$ref": "#/definitions/v1.BuildOutput",
          "description": "output describes the Docker image the Strategy should produce."
        },
        "postCommit": {
          "$ref": "#/definitions/v1.BuildPostCommitSpec",
          "description": "postCommit is a build hook executed after the build output image is committed, before it is pushed to a registry."
        },
        "resources": {
          "$ref": "#/definitions/v1.ResourceRequirements",
          "description": "resources computes resource requirements to execute the build."
        },
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "revision is the information from the source for a specific repo snapshot. This is optional."
        },
        "serviceAccount": {
          "description": "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/v1.BuildSource",
          "description": "source describes the SCM in use."
        },
        "strategy": {
          "$ref": "#/definitions/v1.BuildStrategy",
          "description": "strategy defines how to perform a build."
        },
        "triggeredBy": {
          "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers.",
          "items": {
            "$ref": "#/definitions/v1.BuildTriggerCause"
          },
          "type": "array"
        }
      },
      "required": [
        "strategy",
        "nodeSelector",
        "triggeredBy"
      ]
    },
    "v1.BuildStatus": {
      "description": "BuildStatus contains the status of a build",
      "properties": {
        "cancelled": {
          "description": "cancelled describes if a cancel event was triggered for the build.",
          "type": "boolean"
        },
        "completionTimestamp": {
          "description": "completionTimestamp is a timestamp representing the server time when this Build was finished, whether that build failed or succeeded.  It reflects the time at which the Pod running the Build terminated. It is represented in RFC3339 form and is in UTC.",
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "config is an ObjectReference to the BuildConfig this Build is based on."
        },
        "duration": {
          "$ref": "#/definitions/time.Duration",
          "description": "duration contains time.Duration object describing build time."
        },
        "logSnippet": {
          "description": "logSnippet is the last few lines of the build log.  This value is only set for builds that failed.",
          "type": "string"
        },
        "message": {
          "description": "message is a human-readable message indicating details about why the build has this status.",
          "type": "string"
        },
        "output": {
          "$ref": "#/definitions/v1.BuildStatusOutput",
          "description": "output describes the Docker image the build has produced."
        },
        "outputDockerImageReference": {
          "description": "outputDockerImageReference contains a reference to the Docker image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image.",
          "type": "string"
        },
        "phase": {
          "description": "phase is the point in the build lifecycle. Possible values are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"Error\", and \"Cancelled\".",
          "type": "string"
        },
        "reason": {
          "description": "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.",
          "type": "string"
        },
        "stages": {
          "description": "stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage.",
          "items": {
            "$ref": "#/definitions/v1.StageInfo"
          },
          "type": "array"
        },
        "startTimestamp": {
          "description": "startTimestamp is a timestamp representing the server time when this Build started running in a Pod. It is represented in RFC3339 form and is in UTC.",
          "type": "string"
        }
      },
      "required": [
        "phase"
      ]
    },
    "v1.BuildStatusOutput": {
      "description": "BuildStatusOutput contains the status of the built image.",
      "properties": {
        "to": {
          "$ref": "#/definitions/v1.BuildStatusOutputTo",
          "description": "to describes the status of the built image being pushed to a registry."
        }
      }
    },
    "v1.BuildStatusOutputTo": {
      "description": "BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed.",
      "properties": {
        "imageDigest": {
          "description": "imageDigest is the digest of the built Docker image. The digest uniquely identifies the image in the registry to which it was pushed.\n\nPlease note that this field may not always be set even if the push completes successfully - e.g. when the registry returns no digest or returns it in a format that the builder doesn't understand.",
          "type": "string"
        }
      }
    },
    "v1.BuildStrategy": {
      "description": "BuildStrategy contains the details of how to perform a build.",
      "properties": {
        "customStrategy": {
          "$ref": "#/definitions/v1.CustomBuildStrategy",
          "description": "customStrategy holds the parameters to the Custom build strategy"
        },
        "dockerStrategy": {
          "$ref": "#/definitions/v1.DockerBuildStrategy",
          "description": "dockerStrategy holds the parameters to the Docker build strategy."
        },
        "jenkinsPipelineStrategy": {
          "$ref": "#/definitions/v1.JenkinsPipelineBuildStrategy",
          "description": "JenkinsPipelineStrategy holds the parameters to the Jenkins Pipeline build strategy."
        },
        "sourceStrategy": {
          "$ref": "#/definitions/v1.SourceBuildStrategy",
          "description": "sourceStrategy holds the parameters to the Source build strategy."
        },
        "type": {
          "description": "type is the kind of build strategy.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.BuildTriggerCause": {
      "description": "BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration.",
      "properties": {
        "bitbucketWebHook": {
          "$ref": "#/definitions/v1.BitbucketWebHookCause",
          "description": "BitbucketWebHook represents data for a Bitbucket webhook that fired a specific build."
        },
        "genericWebHook": {
          "$ref": "#/definitions/v1.GenericWebHookCause",
          "description": "genericWebHook holds data about a builds generic webhook trigger."
        },
        "githubWebHook": {
          "$ref": "#/definitions/v1.GitHubWebHookCause",
          "description": "gitHubWebHook represents data for a GitHub webhook that fired a specific build."
        },
        "gitlabWebHook": {
          "$ref": "#/definitions/v1.GitLabWebHookCause",
          "description": "GitLabWebHook represents data for a GitLab webhook that fired a specific build."
        },
        "imageChangeBuild": {
          "$ref": "#/definitions/v1.ImageChangeCause",
          "description": "imageChangeBuild stores information about an imagechange event that triggered a new build."
        },
        "message": {
          "description": "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc.",
          "type": "string"
        }
      }
    },
    "v1.BuildTriggerPolicy": {
      "description": "BuildTriggerPolicy describes a policy for a single trigger that results in a new Build.",
      "properties": {
        "bitbucket": {
          "$ref": "#/definitions/v1.WebHookTrigger",
          "description": "BitbucketWebHook contains the parameters for a Bitbucket webhook type of trigger"
        },
        "generic": {
          "$ref": "#/definitions/v1.WebHookTrigger",
          "description": "generic contains the parameters for a Generic webhook type of trigger"
        },
        "github": {
          "$ref": "#/definitions/v1.WebHookTrigger",
          "description": "github contains the parameters for a GitHub webhook type of trigger"
        },
        "gitlab": {
          "$ref": "#/definitions/v1.WebHookTrigger",
          "description": "GitLabWebHook contains the parameters for a GitLab webhook type of trigger"
        },
        "imageChange": {
          "$ref": "#/definitions/v1.ImageChangeTrigger",
          "description": "imageChange contains parameters for an ImageChange type of trigger"
        },
        "type": {
          "description": "type is the type of build trigger",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "items": {
            "$ref": "#/definitions/v1.Capability"
          },
          "type": "array"
        },
        "drop": {
          "description": "Removed capabilities",
          "items": {
            "$ref": "#/definitions/v1.Capability"
          },
          "type": "array"
        }
      }
    },
    "v1.Capability": {},
    "v1.CephFSVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "monitors": {
          "description": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
          "type": "string"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretFile": {
          "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        },
        "user": {
          "description": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors"
      ]
    },
    "v1.CinderVolumeSource": {
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
          "type": "string"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
          "type": "boolean"
        },
        "volumeID": {
          "description": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ]
    },
    "v1.ClusterNetwork": {
      "description": "ClusterNetwork describes the cluster network. There is normally only one object of this type, named \"default\", which is created by the SDN network plugin based on the master configuration when the cluster is brought up for the first time.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "clusterNetworks": {
          "description": "ClusterNetworks is a list of ClusterNetwork objects that defines the global overlay network's L3 space by specifying a set of CIDR and netmasks that the SDN can allocate addressed from.",
          "items": {
            "$ref": "#/definitions/v1.ClusterNetworkEntry"
          },
          "type": "array"
        },
        "hostsubnetlength": {
          "description": "HostSubnetLength is the number of bits of network to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "network": {
          "description": "Network is a CIDR string specifying the global overlay network's L3 space",
          "type": "string"
        },
        "pluginName": {
          "description": "PluginName is the name of the network plugin being used",
          "type": "string"
        },
        "serviceNetwork": {
          "description": "ServiceNetwork is the CIDR range that Service IP addresses are allocated from",
          "type": "string"
        }
      },
      "required": [
        "serviceNetwork",
        "clusterNetworks"
      ]
    },
    "v1.ClusterNetworkEntry": {
      "description": "ClusterNetworkEntry defines an individual cluster network. The CIDRs cannot overlap with other cluster network CIDRs, CIDRs reserved for external ips, CIDRs reserved for service networks, and CIDRs reserved for ingress ips.",
      "properties": {
        "CIDR": {
          "description": "CIDR defines the total range of a cluster networks address space.",
          "type": "string"
        },
        "hostSubnetLength": {
          "description": "HostSubnetLength is the number of bits of the accompanying CIDR address to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods.",
          "type": "integer"
        }
      },
      "required": [
        "CIDR",
        "hostSubnetLength"
      ]
    },
    "v1.ClusterNetworkList": {
      "description": "ClusterNetworkList is a collection of ClusterNetworks",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of cluster networks",
          "items": {
            "$ref": "#/definitions/v1.ClusterNetwork"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ClusterResourceQuota": {
      "description": "ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object is easily convertible to synthetic ResourceQuota object to allow quota evaluation re-use.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.ClusterResourceQuotaSpec",
          "description": "Spec defines the desired quota"
        },
        "status": {
          "$ref": "#/definitions/v1.ClusterResourceQuotaStatus",
          "description": "Status defines the actual enforced quota and its current usage"
        }
      },
      "required": [
        "metadata",
        "spec"
      ]
    },
    "v1.ClusterResourceQuotaList": {
      "description": "ClusterResourceQuotaList is a collection of ClusterResourceQuotas",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ClusterResourceQuotas",
          "items": {
            "$ref": "#/definitions/v1.ClusterResourceQuota"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ClusterResourceQuotaSelector": {
      "description": "ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions.",
      "properties": {
        "annotations": {
          "description": "AnnotationSelector is used to select projects by annotation.",
          "type": "object"
        },
        "labels": {
          "$ref": "#/definitions/v1.LabelSelector",
          "description": "LabelSelector is used to select projects by label."
        }
      },
      "required": [
        "labels",
        "annotations"
      ]
    },
    "v1.ClusterResourceQuotaSpec": {
      "description": "ClusterResourceQuotaSpec defines the desired quota restrictions",
      "properties": {
        "quota": {
          "$ref": "#/definitions/v1.ResourceQuotaSpec",
          "description": "Quota defines the desired quota"
        },
        "selector": {
          "$ref": "#/definitions/v1.ClusterResourceQuotaSelector",
          "description": "Selector is the selector used to match projects. It should only select active projects on the scale of dozens (though it can select many more less active projects).  These projects will contend on object creation through this resource."
        }
      },
      "required": [
        "selector",
        "quota"
      ]
    },
    "v1.ClusterResourceQuotaStatus": {
      "description": "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage",
      "properties": {
        "namespaces": {
          "description": "Namespaces slices the usage by project.  This division allows for quick resolution of deletion reconciliation inside of a single project without requiring a recalculation across all projects.  This can be used to pull the deltas for a given project.",
          "items": {
            "$ref": "#/definitions/v1.ResourceQuotaStatusByNamespace"
          },
          "type": "array"
        },
        "total": {
          "$ref": "#/definitions/v1.ResourceQuotaStatus",
          "description": "Total defines the actual enforced quota and its current usage across all projects"
        }
      },
      "required": [
        "total",
        "namespaces"
      ]
    },
    "v1.ClusterRole": {
      "description": "ClusterRole is a logical grouping of PolicyRules that can be referenced as a unit by ClusterRoleBindings.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this ClusterRole",
          "items": {
            "$ref": "#/definitions/v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "required": [
        "rules"
      ]
    },
    "v1.ClusterRoleBinding": {
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference any ClusterRole in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. ClusterRoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "groupNames": {
          "description": "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "roleRef": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "RoleRef can only reference the current namespace and the global namespace. If the ClusterRoleRef cannot be resolved, the Authorizer must return an error. Since Policy is a singleton, this is sufficient knowledge to locate a role."
        },
        "subjects": {
          "description": "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames.",
          "items": {
            "$ref": "#/definitions/v1.ObjectReference"
          },
          "type": "array"
        },
        "userNames": {
          "description": "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userNames",
        "groupNames",
        "subjects",
        "roleRef"
      ]
    },
    "v1.ClusterRoleBindingList": {
      "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ClusterRoleBindings",
          "items": {
            "$ref": "#/definitions/v1.ClusterRoleBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ClusterRoleList": {
      "description": "ClusterRoleList is a collection of ClusterRoles",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ClusterRoles",
          "items": {
            "$ref": "#/definitions/v1.ClusterRole"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ClusterRoleScopeRestriction": {
      "description": "ClusterRoleScopeRestriction describes restrictions on cluster role scopes",
      "properties": {
        "allowEscalation": {
          "description": "AllowEscalation indicates whether you can request roles and their escalating resources",
          "type": "boolean"
        },
        "namespaces": {
          "description": "Namespaces is the list of namespaces that can be referenced.  * means any of them (including *)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roleNames": {
          "description": "RoleNames is the list of cluster roles that can referenced.  * means anything",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "roleNames",
        "namespaces",
        "allowEscalation"
      ]
    },
    "v1.ConfigMapEnvSource": {
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap must be defined",
          "type": "boolean"
        }
      }
    },
    "v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or it's key must be defined",
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ]
    },
    "v1.ConfigMapProjection": {
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or it's keys must be defined",
          "type": "boolean"
        }
      }
    },
    "v1.ConfigMapVolumeSource": {
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or it's keys must be defined",
          "type": "boolean"
        }
      }
    },
    "v1.Container": {
      "description": "A single application container that you want to run within a pod.",
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/v1.EnvFromSource"
          },
          "type": "array"
        },
        "image": {
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/v1.Lifecycle",
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
        },
        "livenessProbe": {
          "$ref": "#/definitions/v1.Probe",
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/v1.ContainerPort"
          },
          "type": "array"
        },
        "readinessProbe": {
          "$ref": "#/definitions/v1.Probe",
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "resources": {
          "$ref": "#/definitions/v1.ResourceRequirements",
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        },
        "securityContext": {
          "$ref": "#/definitions/v1.SecurityContext",
          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://git.k8s.io/community/contributors/design-proposals/security_context.md"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/v1.VolumeMount"
          },
          "type": "array"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.ContainerPort": {
      "description": "ContainerPort represents a network port in a single container.",
      "properties": {
        "containerPort": {
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
          "format": "int32",
          "type": "integer"
        },
        "hostIP": {
          "description": "What host IP to bind the external port to.",
          "type": "string"
        },
        "hostPort": {
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
          "type": "string"
        }
      },
      "required": [
        "containerPort"
      ]
    },
    "v1.CustomBuildStrategy": {
      "description": "CustomBuildStrategy defines input parameters specific to Custom build.",
      "properties": {
        "buildAPIVersion": {
          "description": "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder",
          "type": "string"
        },
        "env": {
          "description": "env contains additional environment variables you want to pass into a builder container.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "exposeDockerSocket": {
          "description": "exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container.",
          "type": "boolean"
        },
        "forcePull": {
          "description": "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally",
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled"
        },
        "pullSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries"
        },
        "secrets": {
          "description": "secrets is a list of additional secrets that will be included in the build pod",
          "items": {
            "$ref": "#/definitions/v1.SecretSpec"
          },
          "type": "array"
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.CustomDeploymentStrategyParams": {
      "description": "CustomDeploymentStrategyParams are the input to the Custom deployment strategy.",
      "properties": {
        "command": {
          "description": "Command is optional and overrides CMD in the container Image.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "environment": {
          "description": "Environment holds the environment which will be given to the container for Image.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "image": {
          "description": "Image specifies a Docker image which can carry out a deployment.",
          "type": "string"
        }
      }
    },
    "v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/v1.Preconditions",
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
        },
        "propagationPolicy": {
          "$ref": "#/definitions/v1.DeletionPropagation",
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy."
        }
      }
    },
    "v1.DeletionPropagation": {},
    "v1.DeploymentCause": {
      "description": "DeploymentCause captures information about a particular cause of a deployment.",
      "properties": {
        "imageTrigger": {
          "$ref": "#/definitions/v1.DeploymentCauseImageTrigger",
          "description": "ImageTrigger contains the image trigger details, if this trigger was fired based on an image change"
        },
        "type": {
          "description": "Type of the trigger that resulted in the creation of a new deployment",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.DeploymentCauseImageTrigger": {
      "description": "DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger",
      "properties": {
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "From is a reference to the changed object which triggered a deployment. The field may have the kinds DockerImage, ImageStreamTag, or ImageStreamImage."
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.DeploymentCondition": {
      "description": "DeploymentCondition describes the state of a deployment config at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "description": "The last time the condition transitioned from one status to another.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "type": "string"
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of deployment condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ]
    },
    "v1.DeploymentConfig": {
      "description": "Deployment Configs define the template for a pod and manages deploying new images or configuration changes. A single deployment configuration is usually analogous to a single micro-service. Can support many different deployment patterns, including full restart, customizable rolling updates, and  fully custom behaviors, as well as pre- and post- deployment hooks. Each individual deployment is represented as a replication controller.\n\nA deployment is \"triggered\" when its configuration is changed or a tag in an Image Stream is changed. Triggers can be disabled to allow manual control over a deployment. The \"strategy\" determines how the deployment is carried out and may be changed at any time. The `latestVersion` field is updated when a new deployment is triggered by any means.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.DeploymentConfigSpec",
          "description": "Spec represents a desired deployment state and how to deploy to it."
        },
        "status": {
          "$ref": "#/definitions/v1.DeploymentConfigStatus",
          "description": "Status represents the current deployment state."
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.DeploymentConfigList": {
      "description": "DeploymentConfigList is a collection of deployment configs.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of deployment configs",
          "items": {
            "$ref": "#/definitions/v1.DeploymentConfig"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.DeploymentConfigRollback": {
      "description": "DeploymentConfigRollback provides the input to rollback generation.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the deployment config that will be rolled back.",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.DeploymentConfigRollbackSpec",
          "description": "Spec defines the options to rollback generation."
        },
        "updatedAnnotations": {
          "description": "UpdatedAnnotations is a set of new annotations that will be added in the deployment config.",
          "type": "object"
        }
      },
      "required": [
        "name",
        "spec"
      ]
    },
    "v1.DeploymentConfigRollbackSpec": {
      "description": "DeploymentConfigRollbackSpec represents the options for rollback generation.",
      "properties": {
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "From points to a ReplicationController which is a deployment."
        },
        "includeReplicationMeta": {
          "description": "IncludeReplicationMeta specifies whether to include the replica count and selector.",
          "type": "boolean"
        },
        "includeStrategy": {
          "description": "IncludeStrategy specifies whether to include the deployment Strategy.",
          "type": "boolean"
        },
        "includeTemplate": {
          "description": "IncludeTemplate specifies whether to include the PodTemplateSpec.",
          "type": "boolean"
        },
        "includeTriggers": {
          "description": "IncludeTriggers specifies whether to include config Triggers.",
          "type": "boolean"
        },
        "revision": {
          "description": "Revision to rollback to. If set to 0, rollback to the last revision.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "from",
        "includeTriggers",
        "includeTemplate",
        "includeReplicationMeta",
        "includeStrategy"
      ]
    },
    "v1.DeploymentConfigSpec": {
      "description": "DeploymentConfigSpec represents the desired state of the deployment.",
      "properties": {
        "minReadySeconds": {
          "description": "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32",
          "type": "integer"
        },
        "paused": {
          "description": "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers.",
          "type": "boolean"
        },
        "replicas": {
          "description": "Replicas is the number of desired replicas.",
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "description": "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified. Defaults to 10. (This only applies to DeploymentConfigs created via the new group API resource, not the legacy resource.)",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "description": "Selector is a label query over pods that should match the Replicas count.",
          "type": "object"
        },
        "strategy": {
          "$ref": "#/definitions/v1.DeploymentStrategy",
          "description": "Strategy describes how a deployment is executed."
        },
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected."
        },
        "test": {
          "description": "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action.",
          "type": "boolean"
        },
        "triggers": {
          "description": "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger.",
          "items": {
            "$ref": "#/definitions/v1.DeploymentTriggerPolicy"
          },
          "type": "array"
        }
      },
      "required": [
        "strategy",
        "triggers",
        "replicas",
        "test"
      ]
    },
    "v1.DeploymentConfigStatus": {
      "description": "DeploymentConfigStatus represents the current deployment state.",
      "properties": {
        "availableReplicas": {
          "description": "AvailableReplicas is the total number of available pods targeted by this deployment config.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Conditions represents the latest available observations of a deployment config's current state.",
          "items": {
            "$ref": "#/definitions/v1.DeploymentCondition"
          },
          "type": "array"
        },
        "details": {
          "$ref": "#/definitions/v1.DeploymentDetails",
          "description": "Details are the reasons for the update to this deployment config. This could be based on a change made by the user or caused by an automatic trigger"
        },
        "latestVersion": {
          "description": "LatestVersion is used to determine whether the current deployment associated with a deployment config is out of sync.",
          "format": "int64",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed by the deployment config controller.",
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "description": "Total number of ready pods targeted by this deployment.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas is the total number of pods targeted by this deployment config.",
          "format": "int32",
          "type": "integer"
        },
        "unavailableReplicas": {
          "description": "UnavailableReplicas is the total number of unavailable pods targeted by this deployment config.",
          "format": "int32",
          "type": "integer"
        },
        "updatedReplicas": {
          "description": "UpdatedReplicas is the total number of non-terminated pods targeted by this deployment config that have the desired template spec.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "latestVersion",
        "observedGeneration",
        "replicas",
        "updatedReplicas",
        "availableReplicas",
        "unavailableReplicas"
      ]
    },
    "v1.DeploymentDetails": {
      "description": "DeploymentDetails captures information about the causes of a deployment.",
      "properties": {
        "causes": {
          "description": "Causes are extended data associated with all the causes for creating a new deployment",
          "items": {
            "$ref": "#/definitions/v1.DeploymentCause"
          },
          "type": "array"
        },
        "message": {
          "description": "Message is the user specified change message, if this deployment was triggered manually by the user",
          "type": "string"
        }
      },
      "required": [
        "causes"
      ]
    },
    "v1.DeploymentLog": {
      "description": "DeploymentLog represents the logs for a deployment",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        }
      }
    },
    "v1.DeploymentRequest": {
      "description": "DeploymentRequest is a request to a deployment config for a new deployment.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "excludeTriggers": {
          "description": "ExcludeTriggers instructs the instantiator to avoid processing the specified triggers. This field overrides the triggers from latest and allows clients to control specific logic. This field is ignored if not specified.",
          "items": {
            "$ref": "#/definitions/v1.DeploymentTriggerType"
          },
          "type": "array"
        },
        "force": {
          "description": "Force will try to force a new deployment to run. If the deployment config is paused, then setting this to true will return an Invalid error.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "latest": {
          "description": "Latest will update the deployment config with the latest state from all triggers.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the deployment config for requesting a new deployment.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "latest",
        "force"
      ]
    },
    "v1.DeploymentStrategy": {
      "description": "DeploymentStrategy describes how to perform a deployment.",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them.",
          "format": "int64",
          "type": "integer"
        },
        "annotations": {
          "description": "Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.",
          "type": "object"
        },
        "customParams": {
          "$ref": "#/definitions/v1.CustomDeploymentStrategyParams",
          "description": "CustomParams are the input to the Custom deployment strategy, and may also be specified for the Recreate and Rolling strategies to customize the execution process that runs the deployment."
        },
        "labels": {
          "description": "Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.",
          "type": "object"
        },
        "recreateParams": {
          "$ref": "#/definitions/v1.RecreateDeploymentStrategyParams",
          "description": "RecreateParams are the input to the Recreate deployment strategy."
        },
        "resources": {
          "$ref": "#/definitions/v1.ResourceRequirements",
          "description": "Resources contains resource requirements to execute the deployment and any hooks."
        },
        "rollingParams": {
          "$ref": "#/definitions/v1.RollingDeploymentStrategyParams",
          "description": "RollingParams are the input to the Rolling deployment strategy."
        },
        "type": {
          "description": "Type is the name of a deployment strategy.",
          "type": "string"
        }
      }
    },
    "v1.DeploymentTriggerImageChangeParams": {
      "description": "DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger.",
      "properties": {
        "automatic": {
          "description": "Automatic means that the detection of a new tag value should result in an image update inside the pod template.",
          "type": "boolean"
        },
        "containerNames": {
          "description": "ContainerNames is used to restrict tag updates to the specified set of container names in a pod. If multiple triggers point to the same containers, the resulting behavior is undefined. Future API versions will make this a validation error. If ContainerNames does not point to a valid container, the trigger will be ignored. Future API versions will make this a validation error.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "From is a reference to an image stream tag to watch for changes. From.Name is the only required subfield - if From.Namespace is blank, the namespace of the current deployment trigger will be used."
        },
        "lastTriggeredImage": {
          "description": "LastTriggeredImage is the last image to be triggered.",
          "type": "string"
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.DeploymentTriggerPolicy": {
      "description": "DeploymentTriggerPolicy describes a policy for a single trigger that results in a new deployment.",
      "properties": {
        "imageChangeParams": {
          "$ref": "#/definitions/v1.DeploymentTriggerImageChangeParams",
          "description": "ImageChangeParams represents the parameters for the ImageChange trigger."
        },
        "type": {
          "description": "Type of the trigger",
          "type": "string"
        }
      }
    },
    "v1.DeploymentTriggerType": {},
    "v1.DockerBuildStrategy": {
      "description": "DockerBuildStrategy defines input parameters specific to Docker build.",
      "properties": {
        "buildArgs": {
          "description": "buildArgs contains build arguments that will be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg for more details.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "dockerfilePath": {
          "description": "dockerfilePath is the path of the Dockerfile that will be used to build the Docker image, relative to the root of the context (contextDir).",
          "type": "string"
        },
        "env": {
          "description": "env contains additional environment variables you want to pass into a builder container.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "forcePull": {
          "description": "forcePull describes if the builder should pull the images from registry prior to building.",
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled the resulting image will be used in the FROM line of the Dockerfile for this build."
        },
        "imageOptimizationPolicy": {
          "$ref": "#/definitions/v1.ImageOptimizationPolicy",
          "description": "imageOptimizationPolicy describes what optimizations the system can use when building images to reduce the final size or time spent building the image. The default policy is 'None' which means the final build image will be equivalent to an image created by the Docker build API. The experimental policy 'SkipLayers' will avoid commiting new layers in between each image step, and will fail if the Dockerfile cannot provide compatibility with the 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is the same as 'SkipLayers' but simply warns if compatibility cannot be preserved."
        },
        "noCache": {
          "description": "noCache if set to true indicates that the docker build must be executed with the --no-cache=true flag",
          "type": "boolean"
        },
        "pullSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries"
        }
      }
    },
    "v1.DockerStrategyOptions": {
      "description": "DockerStrategyOptions contains extra strategy options for Docker builds",
      "properties": {
        "buildArgs": {
          "description": "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "noCache": {
          "description": "noCache overrides the docker-strategy noCache option in the build config",
          "type": "boolean"
        }
      }
    },
    "v1.DownwardAPIProjection": {
      "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
      "properties": {
        "items": {
          "description": "Items is a list of DownwardAPIVolume file",
          "items": {
            "$ref": "#/definitions/v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      }
    },
    "v1.DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/v1.ObjectFieldSelector",
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
        },
        "mode": {
          "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1.ResourceFieldSelector",
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
        }
      },
      "required": [
        "path"
      ]
    },
    "v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "Items is a list of downward API volume file",
          "items": {
            "$ref": "#/definitions/v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      }
    },
    "v1.EgressNetworkPolicy": {
      "description": "EgressNetworkPolicy describes the current egress network policy for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin, traffic from a pod to an IP address outside the cluster will be checked against each EgressNetworkPolicyRule in the pod's namespace's EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy is present) then the traffic will be allowed by default.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "metadata for EgressNetworkPolicy"
        },
        "spec": {
          "$ref": "#/definitions/v1.EgressNetworkPolicySpec",
          "description": "spec is the specification of the current egress network policy"
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.EgressNetworkPolicyList": {
      "description": "EgressNetworkPolicyList is a collection of EgressNetworkPolicy",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of policies",
          "items": {
            "$ref": "#/definitions/v1.EgressNetworkPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "metadata for EgressNetworkPolicyList"
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.EgressNetworkPolicyPeer": {
      "description": "EgressNetworkPolicyPeer specifies a target to apply egress network policy to",
      "properties": {
        "cidrSelector": {
          "description": "cidrSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset",
          "type": "string"
        },
        "dnsName": {
          "description": "dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset",
          "type": "string"
        }
      }
    },
    "v1.EgressNetworkPolicyRule": {
      "description": "EgressNetworkPolicyRule contains a single egress network policy rule",
      "properties": {
        "to": {
          "$ref": "#/definitions/v1.EgressNetworkPolicyPeer",
          "description": "to is the target that traffic is allowed/denied to"
        },
        "type": {
          "description": "type marks this as an \"Allow\" or \"Deny\" rule",
          "type": "string"
        }
      },
      "required": [
        "type",
        "to"
      ]
    },
    "v1.EgressNetworkPolicySpec": {
      "description": "EgressNetworkPolicySpec provides a list of policies on outgoing network traffic",
      "properties": {
        "egress": {
          "description": "egress contains the list of egress policy rules",
          "items": {
            "$ref": "#/definitions/v1.EgressNetworkPolicyRule"
          },
          "type": "array"
        }
      },
      "required": [
        "egress"
      ]
    },
    "v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "properties": {
        "medium": {
          "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "type": "string"
        },
        "sizeLimit": {
          "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
          "type": "string"
        }
      }
    },
    "v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/v1.ConfigMapEnvSource",
          "description": "The ConfigMap to select from"
        },
        "prefix": {
          "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.SecretEnvSource",
          "description": "The Secret to select from"
        }
      }
    },
    "v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/v1.EnvVarSource",
          "description": "Source for the environment variable's value. Cannot be used if value is not empty."
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/v1.ConfigMapKeySelector",
          "description": "Selects a key of a ConfigMap."
        },
        "fieldRef": {
          "$ref": "#/definitions/v1.ObjectFieldSelector",
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP."
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/v1.ResourceFieldSelector",
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
        },
        "secretKeyRef": {
          "$ref": "#/definitions/v1.SecretKeySelector",
          "description": "Selects a key of a secret in the pod's namespace"
        }
      }
    },
    "v1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "v1.ExecNewPodHook": {
      "description": "ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template.",
      "properties": {
        "command": {
          "description": "Command is the action command and its arguments.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "containerName": {
          "description": "ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container.",
          "type": "string"
        },
        "env": {
          "description": "Env is a set of environment variables to supply to the hook pod's container.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "volumes": {
          "description": "Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "command",
        "containerName"
      ]
    },
    "v1.FCVolumeSource": {
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "lun": {
          "description": "Optional: FC target lun number",
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "targetWWNs": {
          "description": "Optional: FC target worldwide names (WWNs)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "wwids": {
          "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "v1.FinalizerName": {},
    "v1.FlexVolumeSource": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
      "properties": {
        "driver": {
          "description": "Driver is the name of the driver to use for this volume.",
          "type": "string"
        },
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
          "type": "string"
        },
        "options": {
          "description": "Optional: Extra command options if any.",
          "type": "object"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
        }
      },
      "required": [
        "driver"
      ]
    },
    "v1.FlockerVolumeSource": {
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "datasetName": {
          "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
          "type": "string"
        },
        "datasetUUID": {
          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
          "type": "string"
        }
      }
    },
    "v1.GCEPersistentDiskVolumeSource": {
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "format": "int32",
          "type": "integer"
        },
        "pdName": {
          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "boolean"
        }
      },
      "required": [
        "pdName"
      ]
    },
    "v1.GenericWebHookCause": {
      "description": "GenericWebHookCause holds information about a generic WebHook that triggered a build.",
      "properties": {
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "revision is an optional field that stores the git source revision information of the generic webhook trigger when it is available."
        },
        "secret": {
          "description": "secret is the obfuscated webhook secret that triggered a build.",
          "type": "string"
        }
      }
    },
    "v1.GitBuildSource": {
      "description": "GitBuildSource defines the parameters of a Git SCM",
      "properties": {
        "httpProxy": {
          "description": "httpProxy is a proxy used to reach the git repository over http",
          "type": "string"
        },
        "httpsProxy": {
          "description": "httpsProxy is a proxy used to reach the git repository over https",
          "type": "string"
        },
        "noProxy": {
          "description": "noProxy is the list of domains for which the proxy should not be used",
          "type": "string"
        },
        "ref": {
          "description": "ref is the branch/tag/ref to build.",
          "type": "string"
        },
        "uri": {
          "description": "uri points to the source that will be built. The structure of the source will depend on the type of build to run",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ]
    },
    "v1.GitHubWebHookCause": {
      "description": "GitHubWebHookCause has information about a GitHub webhook that triggered a build.",
      "properties": {
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "revision is the git revision information of the trigger."
        },
        "secret": {
          "description": "secret is the obfuscated webhook secret that triggered a build.",
          "type": "string"
        }
      }
    },
    "v1.GitLabWebHookCause": {
      "description": "GitLabWebHookCause has information about a GitLab webhook that triggered a build.",
      "properties": {
        "revision": {
          "$ref": "#/definitions/v1.SourceRevision",
          "description": "Revision is the git source revision information of the trigger."
        },
        "secret": {
          "description": "Secret is the obfuscated webhook secret that triggered a build.",
          "type": "string"
        }
      }
    },
    "v1.GitRepoVolumeSource": {
      "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.",
      "properties": {
        "directory": {
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string"
        },
        "repository": {
          "description": "Repository URL",
          "type": "string"
        },
        "revision": {
          "description": "Commit hash for the specified revision.",
          "type": "string"
        }
      },
      "required": [
        "repository"
      ]
    },
    "v1.GitSourceRevision": {
      "description": "GitSourceRevision is the commit information from a git source for a build",
      "properties": {
        "author": {
          "$ref": "#/definitions/v1.SourceControlUser",
          "description": "author is the author of a specific commit"
        },
        "commit": {
          "description": "commit is the commit hash identifying a specific commit",
          "type": "string"
        },
        "committer": {
          "$ref": "#/definitions/v1.SourceControlUser",
          "description": "committer is the committer of a specific commit"
        },
        "message": {
          "description": "message is the description of a specific commit",
          "type": "string"
        }
      }
    },
    "v1.GlusterfsVolumeSource": {
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "endpoints": {
          "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "path": {
          "description": "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
          "type": "boolean"
        }
      },
      "required": [
        "endpoints",
        "path"
      ]
    },
    "v1.Group": {
      "description": "Group represents a referenceable set of Users",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "users": {
          "description": "Users is the list of users in this group.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "users"
      ]
    },
    "v1.GroupList": {
      "description": "GroupList is a collection of Groups",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of groups",
          "items": {
            "$ref": "#/definitions/v1.Group"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.GroupRestriction": {
      "description": "GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels.",
      "properties": {
        "groups": {
          "description": "Groups is a list of groups used to match against an individual user's groups. If the user is a member of one of the whitelisted groups, the user is allowed to be bound to a role.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "labels": {
          "description": "Selectors specifies a list of label selectors over group labels.",
          "items": {
            "$ref": "#/definitions/v1.LabelSelector"
          },
          "type": "array"
        }
      },
      "required": [
        "groups",
        "labels"
      ]
    },
    "v1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "items": {
            "$ref": "#/definitions/v1.HTTPHeader"
          },
          "type": "array"
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "type": "string"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ]
    },
    "v1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "v1.Handler": {
      "description": "Handler defines a specific action that should be taken",
      "properties": {
        "exec": {
          "$ref": "#/definitions/v1.ExecAction",
          "description": "One and only one of the following should be specified. Exec specifies the action to take."
        },
        "httpGet": {
          "$ref": "#/definitions/v1.HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform."
        },
        "tcpSocket": {
          "$ref": "#/definitions/v1.TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
        }
      }
    },
    "v1.HostAlias": {
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
      "properties": {
        "hostnames": {
          "description": "Hostnames for the above IP address.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ip": {
          "description": "IP address of the host file entry.",
          "type": "string"
        }
      }
    },
    "v1.HostPathType": {},
    "v1.HostPathVolumeSource": {
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1.HostPathType",
          "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        }
      },
      "required": [
        "path"
      ]
    },
    "v1.HostSubnet": {
      "description": "HostSubnet describes the container subnet network on a node. The HostSubnet object must have the same name as the Node object it corresponds to.",
      "properties": {
        "host": {
          "description": "Host is the name of the node. (This is the same as the object's name, but both fields must be set.)",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "egressIPs": {
          "description": "EgressIPs is the list of automatic egress IP addresses currently hosted by this node",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hostIP": {
          "description": "HostIP is the IP address to be used as a VTEP by other nodes in the overlay network",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "subnet": {
          "description": "Subnet is the CIDR range of the overlay network assigned to the node for its pods",
          "type": "string"
        }
      },
      "required": [
        "host",
        "hostIP",
        "subnet"
      ]
    },
    "v1.HostSubnetList": {
      "description": "HostSubnetList is a collection of HostSubnets",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of host subnets",
          "items": {
            "$ref": "#/definitions/v1.HostSubnet"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ISCSIVolumeSource": {
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "properties": {
        "chapAuthDiscovery": {
          "description": "whether support iSCSI Discovery CHAP authentication",
          "type": "boolean"
        },
        "chapAuthSession": {
          "description": "whether support iSCSI Session CHAP authentication",
          "type": "boolean"
        },
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
          "type": "string"
        },
        "initiatorName": {
          "description": "Custom iSCSI initiator name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
          "type": "string"
        },
        "iqn": {
          "description": "Target iSCSI Qualified Name.",
          "type": "string"
        },
        "iscsiInterface": {
          "description": "Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport.",
          "type": "string"
        },
        "lun": {
          "description": "iSCSI target lun number.",
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "description": "iSCSI target portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "CHAP secret for iSCSI target and initiator authentication"
        },
        "targetPortal": {
          "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "string"
        }
      },
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ]
    },
    "v1.Identity": {
      "description": "Identity records a successful authentication of a user with an identity provider. The information about the source of authentication is stored on the identity, and the identity is then associated with a single user object. Multiple identities can reference a single user. Information retrieved from the authentication provider is stored in the extra field using a schema determined by the provider.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "extra": {
          "description": "Extra holds extra information about this identity",
          "type": "object"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "providerName": {
          "description": "ProviderName is the source of identity information",
          "type": "string"
        },
        "providerUserName": {
          "description": "ProviderUserName uniquely represents this identity in the scope of the provider",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "User is a reference to the user this identity is associated with Both Name and UID must be set"
        }
      },
      "required": [
        "providerName",
        "providerUserName",
        "user"
      ]
    },
    "v1.IdentityList": {
      "description": "IdentityList is a collection of Identities",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of identities",
          "items": {
            "$ref": "#/definitions/v1.Identity"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.Image": {
      "description": "Image is an immutable representation of a Docker image and metadata at a point in time.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "dockerImageConfig": {
          "description": "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2.",
          "type": "string"
        },
        "dockerImageLayers": {
          "description": "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data.",
          "items": {
            "$ref": "#/definitions/v1.ImageLayer"
          },
          "type": "array"
        },
        "dockerImageManifest": {
          "description": "DockerImageManifest is the raw JSON of the manifest",
          "type": "string"
        },
        "dockerImageManifestMediaType": {
          "description": "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2.",
          "type": "string"
        },
        "dockerImageMetadata": {
          "description": "DockerImageMetadata contains metadata about this image",
          "type": "string"
        },
        "dockerImageMetadataVersion": {
          "description": "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\"",
          "type": "string"
        },
        "dockerImageReference": {
          "description": "DockerImageReference is the string that can be used to pull this image.",
          "type": "string"
        },
        "dockerImageSignatures": {
          "description": "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1.",
          "items": {
            "$ref": "#/definitions/v1.Image.dockerImageSignatures"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "signatures": {
          "description": "Signatures holds all signatures of the image.",
          "items": {
            "$ref": "#/definitions/v1.ImageSignature"
          },
          "type": "array"
        }
      },
      "required": [
        "dockerImageLayers"
      ]
    },
    "v1.ImageChangeCause": {
      "description": "ImageChangeCause contains information about the image that triggered a build",
      "properties": {
        "fromRef": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "fromRef contains detailed information about an image that triggered a build."
        },
        "imageID": {
          "description": "imageID is the ID of the image that triggered a a new build.",
          "type": "string"
        }
      }
    },
    "v1.ImageChangeTrigger": {
      "description": "ImageChangeTrigger allows builds to be triggered when an ImageStream changes",
      "properties": {
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is a reference to an ImageStreamTag that will trigger a build when updated It is optional. If no From is specified, the From image from the build strategy will be used. Only one ImageChangeTrigger with an empty From reference is allowed in a build configuration."
        },
        "lastTriggeredImageID": {
          "description": "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build",
          "type": "string"
        }
      }
    },
    "v1.ImageImportSpec": {
      "description": "ImageImportSpec describes a request to import a specific image.",
      "properties": {
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "From is the source of an image to import; only kind DockerImage is allowed"
        },
        "importPolicy": {
          "$ref": "#/definitions/v1.TagImportPolicy",
          "description": "ImportPolicy is the policy controlling how the image is imported"
        },
        "includeManifest": {
          "description": "IncludeManifest determines if the manifest for each image is returned in the response",
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/v1.TagReferencePolicy",
          "description": "ReferencePolicy defines how other components should consume the image"
        },
        "to": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "To is a tag in the current image stream to assign the imported image to, if name is not specified the default tag from from.name will be used"
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.ImageImportStatus": {
      "description": "ImageImportStatus describes the result of an image import.",
      "properties": {
        "image": {
          "$ref": "#/definitions/v1.Image",
          "description": "Image is the metadata of that image, if the image was located"
        },
        "status": {
          "$ref": "#/definitions/v1.Status",
          "description": "Status is the status of the image import, including errors encountered while retrieving the image"
        },
        "tag": {
          "description": "Tag is the tag this image was located under, if any",
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "v1.ImageLabel": {
      "description": "ImageLabel represents a label applied to the resulting image.",
      "properties": {
        "name": {
          "description": "name defines the name of the label. It must have non-zero length.",
          "type": "string"
        },
        "value": {
          "description": "value defines the literal value of the label.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.ImageLayer": {
      "description": "ImageLayer represents a single layer of the image. Some images may have multiple layers. Some may have none.",
      "properties": {
        "mediaType": {
          "description": "MediaType of the referenced object.",
          "type": "string"
        },
        "name": {
          "description": "Name of the layer as defined by the underlying store.",
          "type": "string"
        },
        "size": {
          "description": "Size of the layer in bytes as defined by the underlying store.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "size",
        "mediaType"
      ]
    },
    "v1.ImageList": {
      "description": "ImageList is a list of Image objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of images",
          "items": {
            "$ref": "#/definitions/v1.Image"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ImageLookupPolicy": {
      "description": "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace.",
      "properties": {
        "local": {
          "description": "local will change the docker short image references (like \"mysql\" or \"php:latest\") on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag's referencePolicy is taken into account on the replaced value. Only works within the current namespace.",
          "type": "boolean"
        }
      },
      "required": [
        "local"
      ]
    },
    "v1.ImageOptimizationPolicy": {},
    "v1.ImageSignature": {
      "description": "ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions represent the latest available observations of a signature's current state.",
          "items": {
            "$ref": "#/definitions/v1.SignatureCondition"
          },
          "type": "array"
        },
        "content": {
          "description": "Required: An opaque binary string which is an image's signature.",
          "type": "string"
        },
        "created": {
          "description": "If specified, it is the time of signature's creation.",
          "type": "string"
        },
        "imageIdentity": {
          "description": "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\").",
          "type": "string"
        },
        "issuedBy": {
          "$ref": "#/definitions/v1.SignatureIssuer",
          "description": "If specified, it holds information about an issuer of signing certificate or key (a person or entity who signed the signing certificate or key)."
        },
        "issuedTo": {
          "$ref": "#/definitions/v1.SignatureSubject",
          "description": "If specified, it holds information about a subject of signing certificate or key (a person or entity who signed the image)."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "signedClaims": {
          "description": "Contains claims from the signature.",
          "type": "object"
        },
        "type": {
          "description": "Required: Describes a type of stored blob.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "content"
      ]
    },
    "v1.ImageSource": {
      "description": "ImageSource is used to describe build source that will be extracted from an image. A reference of type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to pull the image from an external registry or override the default service account secret if pulling from the internal registry. A list of paths to copy from the image and their respective destination within the build directory must be specified in the paths array.",
      "properties": {
        "paths": {
          "description": "paths is a list of source and destination paths to copy from the image.",
          "items": {
            "$ref": "#/definitions/v1.ImageSourcePath"
          },
          "type": "array"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is a reference to an ImageStreamTag, ImageStreamImage, or DockerImage to copy source from."
        },
        "pullSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "pullSecret is a reference to a secret to be used to pull the image from a registry If the image is pulled from the OpenShift registry, this field does not need to be set."
        }
      },
      "required": [
        "from",
        "paths"
      ]
    },
    "v1.ImageSourcePath": {
      "description": "ImageSourcePath describes a path to be copied from a source image and its destination within the build directory.",
      "properties": {
        "destinationDir": {
          "description": "destinationDir is the relative directory within the build directory where files copied from the image are placed.",
          "type": "string"
        },
        "sourcePath": {
          "description": "sourcePath is the absolute path of the file or directory inside the image to copy to the build directory.  If the source path ends in /. then the content of the directory will be copied, but the directory itself will not be created at the destination.",
          "type": "string"
        }
      },
      "required": [
        "sourcePath",
        "destinationDir"
      ]
    },
    "v1.ImageStream": {
      "description": "ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.ImageStreamSpec",
          "description": "Spec describes the desired state of this stream"
        },
        "status": {
          "$ref": "#/definitions/v1.ImageStreamStatus",
          "description": "Status describes the current state of this stream"
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.ImageStreamImage": {
      "description": "ImageStreamImage represents an Image that is retrieved by image name from an ImageStream.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/v1.Image",
          "description": "Image associated with the ImageStream and image name."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "image"
      ]
    },
    "v1.ImageStreamImport": {
      "description": "The image stream import resource provides an easy way for a user to find and import Docker images from other Docker registries into the server. Individual images or an entire image repository may be imported, and users may choose to see the results of the import prior to tagging the resulting images into the specified image stream.\n\nThis API is intended for end-user tools that need to see the metadata of the image prior to import (for instance, to generate an application from it). Clients that know the desired image can continue to create spec.tags directly into their image streams.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.ImageStreamImportSpec",
          "description": "Spec is a description of the images that the user wishes to import"
        },
        "status": {
          "$ref": "#/definitions/v1.ImageStreamImportStatus",
          "description": "Status is the the result of importing the image"
        }
      },
      "required": [
        "spec",
        "status"
      ]
    },
    "v1.ImageStreamImportSpec": {
      "description": "ImageStreamImportSpec defines what images should be imported.",
      "properties": {
        "images": {
          "description": "Images are a list of individual images to import.",
          "items": {
            "$ref": "#/definitions/v1.ImageImportSpec"
          },
          "type": "array"
        },
        "import": {
          "description": "Import indicates whether to perform an import - if so, the specified tags are set on the spec and status of the image stream defined by the type meta.",
          "type": "boolean"
        },
        "repository": {
          "$ref": "#/definitions/v1.RepositoryImportSpec",
          "description": "Repository is an optional import of an entire Docker image repository. A maximum limit on the number of tags imported this way is imposed by the server."
        }
      },
      "required": [
        "import"
      ]
    },
    "v1.ImageStreamImportStatus": {
      "description": "ImageStreamImportStatus contains information about the status of an image stream import.",
      "properties": {
        "images": {
          "description": "Images is set with the result of importing spec.images",
          "items": {
            "$ref": "#/definitions/v1.ImageImportStatus"
          },
          "type": "array"
        },
        "import": {
          "$ref": "#/definitions/v1.ImageStream",
          "description": "Import is the image stream that was successfully updated or created when 'to' was set."
        },
        "repository": {
          "$ref": "#/definitions/v1.RepositoryImportStatus",
          "description": "Repository is set if spec.repository was set to the outcome of the import"
        }
      }
    },
    "v1.ImageStreamList": {
      "description": "ImageStreamList is a list of ImageStream objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of imageStreams",
          "items": {
            "$ref": "#/definitions/v1.ImageStream"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ImageStreamMapping": {
      "description": "ImageStreamMapping represents a mapping from a single tag to a Docker image as well as the reference to the Docker image stream the image came from.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/v1.Image",
          "description": "Image is a Docker image."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "tag": {
          "description": "Tag is a string value this image can be located with inside the stream.",
          "type": "string"
        }
      },
      "required": [
        "image",
        "tag"
      ]
    },
    "v1.ImageStreamSpec": {
      "description": "ImageStreamSpec represents options for ImageStreams.",
      "properties": {
        "tags": {
          "description": "tags map arbitrary string values to specific image locators",
          "items": {
            "$ref": "#/definitions/v1.TagReference"
          },
          "type": "array"
        },
        "dockerImageRepository": {
          "description": "dockerImageRepository is optional, if specified this stream is backed by a Docker repository on this server Deprecated: This field is deprecated as of v3.7 and will be removed in a future release. Specify the source for the tags to be imported in each tag via the spec.tags.from reference instead.",
          "type": "string"
        },
        "lookupPolicy": {
          "$ref": "#/definitions/v1.ImageLookupPolicy",
          "description": "lookupPolicy controls how other resources reference images within this namespace."
        }
      }
    },
    "v1.ImageStreamStatus": {
      "description": "ImageStreamStatus contains information about the state of this image stream.",
      "properties": {
        "tags": {
          "description": "Tags are a historical record of images associated with each tag. The first entry in the TagEvent array is the currently tagged image.",
          "items": {
            "$ref": "#/definitions/v1.NamedTagEventList"
          },
          "type": "array"
        },
        "dockerImageRepository": {
          "description": "DockerImageRepository represents the effective location this stream may be accessed at. May be empty until the server determines where the repository is located",
          "type": "string"
        },
        "publicDockerImageRepository": {
          "description": "PublicDockerImageRepository represents the public location from where the image can be pulled outside the cluster. This field may be empty if the administrator has not exposed the integrated registry externally.",
          "type": "string"
        }
      },
      "required": [
        "dockerImageRepository"
      ]
    },
    "v1.ImageStreamTag": {
      "description": "ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "conditions": {
          "description": "conditions is an array of conditions that apply to the image stream tag.",
          "items": {
            "$ref": "#/definitions/v1.TagEventCondition"
          },
          "type": "array"
        },
        "generation": {
          "description": "generation is the current generation of the tagged image - if tag is provided and this value is not equal to the tag generation, a user has requested an import that has not completed, or conditions will be filled out indicating any error.",
          "format": "int64",
          "type": "integer"
        },
        "image": {
          "$ref": "#/definitions/v1.Image",
          "description": "image associated with the ImageStream and tag."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "lookupPolicy": {
          "$ref": "#/definitions/v1.ImageLookupPolicy",
          "description": "lookupPolicy indicates whether this tag will handle image references in this namespace."
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "tag": {
          "$ref": "#/definitions/v1.TagReference",
          "description": "tag is the spec tag associated with this image stream tag, and it may be null if only pushes have occurred to this image stream."
        }
      },
      "required": [
        "tag",
        "generation",
        "lookupPolicy",
        "image"
      ]
    },
    "v1.ImageStreamTagList": {
      "description": "ImageStreamTagList is a list of ImageStreamTag objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of image stream tags",
          "items": {
            "$ref": "#/definitions/v1.ImageStreamTag"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.Initializer": {
      "description": "Initializer is information about an initializer that has not yet completed.",
      "properties": {
        "name": {
          "description": "name of the process that is responsible for initializing this object.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.Initializers": {
      "description": "Initializers tracks the progress of initialization.",
      "properties": {
        "pending": {
          "description": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
          "items": {
            "$ref": "#/definitions/v1.Initializer"
          },
          "type": "array"
        },
        "result": {
          "$ref": "#/definitions/v1.Status",
          "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion."
        }
      },
      "required": [
        "pending"
      ]
    },
    "v1.JenkinsPipelineBuildStrategy": {
      "description": "JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build.",
      "properties": {
        "env": {
          "description": "env contains additional environment variables you want to pass into a build pipeline.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "jenkinsfile": {
          "description": "Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build.",
          "type": "string"
        },
        "jenkinsfilePath": {
          "description": "JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir.",
          "type": "string"
        }
      }
    },
    "v1.KeyToPath": {
      "description": "Maps a string key to a path within a volume.",
      "properties": {
        "key": {
          "description": "The key to project.",
          "type": "string"
        },
        "mode": {
          "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "path"
      ]
    },
    "v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "items": {
            "$ref": "#/definitions/v1.LabelSelectorRequirement"
          },
          "type": "array"
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object"
        }
      }
    },
    "v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ]
    },
    "v1.Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/v1.Handler",
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
        },
        "preStop": {
          "$ref": "#/definitions/v1.Handler",
          "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
        }
      }
    },
    "v1.LifecycleHook": {
      "description": "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time.",
      "properties": {
        "execNewPod": {
          "$ref": "#/definitions/v1.ExecNewPodHook",
          "description": "ExecNewPod specifies the options for a lifecycle hook backed by a pod."
        },
        "failurePolicy": {
          "description": "FailurePolicy specifies what action to take if the hook fails.",
          "type": "string"
        },
        "tagImages": {
          "description": "TagImages instructs the deployer to tag the current image referenced under a container onto an image stream tag.",
          "items": {
            "$ref": "#/definitions/v1.TagImageHook"
          },
          "type": "array"
        }
      },
      "required": [
        "failurePolicy"
      ]
    },
    "v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.",
          "type": "string"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.",
          "type": "string"
        }
      }
    },
    "v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      }
    },
    "v1.LocalResourceAccessReview": {
      "description": "LocalResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec in a particular namespace",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "type": "string"
        },
        "isNonResourceURL": {
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces",
          "type": "string"
        },
        "path": {
          "description": "Path is the path of a non resource URL",
          "type": "string"
        },
        "resource": {
          "description": "Resource is one of the existing resource types",
          "type": "string"
        },
        "resourceAPIGroup": {
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined",
          "type": "string"
        },
        "resourceAPIVersion": {
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined",
          "type": "string"
        },
        "resourceName": {
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\"",
          "type": "string"
        },
        "verb": {
          "description": "Verb is one of: get, list, watch, create, update, delete",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ]
    },
    "v1.LocalSubjectAccessReview": {
      "description": "LocalSubjectAccessReview is an object for requesting information about whether a user or group can perform an action in a particular namespace",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "type": "string"
        },
        "groups": {
          "description": "Groups is optional.  Groups is the list of groups to which the User belongs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "isNonResourceURL": {
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces",
          "type": "string"
        },
        "path": {
          "description": "Path is the path of a non resource URL",
          "type": "string"
        },
        "resource": {
          "description": "Resource is one of the existing resource types",
          "type": "string"
        },
        "resourceAPIGroup": {
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined",
          "type": "string"
        },
        "resourceAPIVersion": {
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined",
          "type": "string"
        },
        "resourceName": {
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\"",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user": {
          "description": "User is optional.  If both User and Groups are empty, the current authenticated user is used.",
          "type": "string"
        },
        "verb": {
          "description": "Verb is one of: get, list, watch, create, update, delete",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ]
    },
    "v1.MountPropagationMode": {},
    "v1.NFSVolumeSource": {
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "boolean"
        },
        "server": {
          "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        }
      },
      "required": [
        "server",
        "path"
      ]
    },
    "v1.NamedTagEventList": {
      "description": "NamedTagEventList relates a tag to its image history.",
      "properties": {
        "conditions": {
          "description": "Conditions is an array of conditions that apply to the tag event list.",
          "items": {
            "$ref": "#/definitions/v1.TagEventCondition"
          },
          "type": "array"
        },
        "items": {
          "description": "Standard object's metadata.",
          "items": {
            "$ref": "#/definitions/v1.TagEvent"
          },
          "type": "array"
        },
        "tag": {
          "description": "Tag is the tag for which the history is recorded",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "items"
      ]
    },
    "v1.NetNamespace": {
      "description": "NetNamespace describes a single isolated network. When using the redhat/openshift-ovs-multitenant plugin, every Namespace will have a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet, NetNamespaces are not used.)",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "egressIPs": {
          "description": "EgressIPs is a list of reserved IPs that will be used as the source for external traffic coming from pods in this namespace. (If empty, external traffic will be masqueraded to Node IPs.)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "netid": {
          "description": "NetID is the network identifier of the network namespace assigned to each overlay network packet. This can be manipulated with the \"oc adm pod-network\" commands.",
          "type": "integer"
        },
        "netname": {
          "description": "NetName is the name of the network namespace. (This is the same as the object's name, but both fields must be set.)",
          "type": "string"
        }
      },
      "required": [
        "netname",
        "netid"
      ]
    },
    "v1.NetNamespaceList": {
      "description": "NetNamespaceList is a collection of NetNamespaces",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of net namespaces",
          "items": {
            "$ref": "#/definitions/v1.NetNamespace"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/v1.PreferredSchedulingTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/v1.NodeSelector",
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node."
        }
      }
    },
    "v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "items": {
            "$ref": "#/definitions/v1.NodeSelectorTerm"
          },
          "type": "array"
        }
      },
      "required": [
        "nodeSelectorTerms"
      ]
    },
    "v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
          "type": "string"
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ]
    },
    "v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects.",
      "properties": {
        "matchExpressions": {
          "description": "Required. A list of node selector requirements. The requirements are ANDed.",
          "items": {
            "$ref": "#/definitions/v1.NodeSelectorRequirement"
          },
          "type": "array"
        }
      },
      "required": [
        "matchExpressions"
      ]
    },
    "v1.OAuthAccessToken": {
      "description": "OAuthAccessToken describes an OAuth access token",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "authorizeToken": {
          "description": "AuthorizeToken contains the token that authorized this token",
          "type": "string"
        },
        "clientName": {
          "description": "ClientName references the client that created this token.",
          "type": "string"
        },
        "expiresIn": {
          "description": "ExpiresIn is the seconds from CreationTime before this token expires.",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "redirectURI": {
          "description": "RedirectURI is the redirection associated with the token.",
          "type": "string"
        },
        "refreshToken": {
          "description": "RefreshToken is the value by which this token can be renewed. Can be blank.",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes is an array of the requested scopes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userName": {
          "description": "UserName is the user name associated with this token",
          "type": "string"
        },
        "userUID": {
          "description": "UserUID is the unique UID associated with this token",
          "type": "string"
        }
      }
    },
    "v1.OAuthAccessTokenList": {
      "description": "OAuthAccessTokenList is a collection of OAuth access tokens",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of OAuth access tokens",
          "items": {
            "$ref": "#/definitions/v1.OAuthAccessToken"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.OAuthAuthorizeToken": {
      "description": "OAuthAuthorizeToken describes an OAuth authorization token",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "clientName": {
          "description": "ClientName references the client that created this token.",
          "type": "string"
        },
        "codeChallenge": {
          "description": "CodeChallenge is the optional code_challenge associated with this authorization code, as described in rfc7636",
          "type": "string"
        },
        "codeChallengeMethod": {
          "description": "CodeChallengeMethod is the optional code_challenge_method associated with this authorization code, as described in rfc7636",
          "type": "string"
        },
        "expiresIn": {
          "description": "ExpiresIn is the seconds from CreationTime before this token expires.",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "redirectURI": {
          "description": "RedirectURI is the redirection associated with the token.",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes is an array of the requested scopes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "description": "State data from request",
          "type": "string"
        },
        "userName": {
          "description": "UserName is the user name associated with this token",
          "type": "string"
        },
        "userUID": {
          "description": "UserUID is the unique UID associated with this token. UserUID and UserName must both match for this token to be valid.",
          "type": "string"
        }
      }
    },
    "v1.OAuthAuthorizeTokenList": {
      "description": "OAuthAuthorizeTokenList is a collection of OAuth authorization tokens",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of OAuth authorization tokens",
          "items": {
            "$ref": "#/definitions/v1.OAuthAuthorizeToken"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.OAuthClient": {
      "description": "OAuthClient describes an OAuth client",
      "properties": {
        "accessTokenMaxAgeSeconds": {
          "description": "AccessTokenMaxAgeSeconds overrides the default access token max age for tokens granted to this client. 0 means no expiration.",
          "format": "int32",
          "type": "integer"
        },
        "additionalSecrets": {
          "description": "AdditionalSecrets holds other secrets that may be used to identify the client.  This is useful for rotation and for service account token validation",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "grantMethod": {
          "description": "GrantMethod determines how to handle grants for this client. If no method is provided, the cluster default grant handling method will be used. Valid grant handling methods are:\n - auto:   always approves grant requests, useful for trusted clients\n - prompt: prompts the end user for approval of grant requests, useful for third-party clients\n - deny:   always denies grant requests, useful for black-listed clients",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "redirectURIs": {
          "description": "RedirectURIs is the valid redirection URIs associated with a client",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "respondWithChallenges": {
          "description": "RespondWithChallenges indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects",
          "type": "boolean"
        },
        "scopeRestrictions": {
          "description": "ScopeRestrictions describes which scopes this client can request.  Each requested scope is checked against each restriction.  If any restriction matches, then the scope is allowed. If no restriction matches, then the scope is denied.",
          "items": {
            "$ref": "#/definitions/v1.ScopeRestriction"
          },
          "type": "array"
        },
        "secret": {
          "description": "Secret is the unique secret associated with a client",
          "type": "string"
        }
      }
    },
    "v1.OAuthClientAuthorization": {
      "description": "OAuthClientAuthorization describes an authorization created by an OAuth client",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "clientName": {
          "description": "ClientName references the client that created this authorization",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "scopes": {
          "description": "Scopes is an array of the granted scopes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userName": {
          "description": "UserName is the user name that authorized this client",
          "type": "string"
        },
        "userUID": {
          "description": "UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid.",
          "type": "string"
        }
      }
    },
    "v1.OAuthClientAuthorizationList": {
      "description": "OAuthClientAuthorizationList is a collection of OAuth client authorizations",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of OAuth client authorizations",
          "items": {
            "$ref": "#/definitions/v1.OAuthClientAuthorization"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.OAuthClientList": {
      "description": "OAuthClientList is a collection of OAuth clients",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of OAuth clients",
          "items": {
            "$ref": "#/definitions/v1.OAuthClient"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string"
        }
      },
      "required": [
        "fieldPath"
      ]
    },
    "v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "type": "string"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "type": "string"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "initializers": {
          "$ref": "#/definitions/v1.Initializers",
          "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user."
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "items": {
            "$ref": "#/definitions/v1.OwnerReference"
          },
          "type": "array"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      }
    },
    "v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ]
    },
    "v1.Parameter": {
      "description": "Parameter defines a name/value variable that is to be processed during the Template to Config transformation.",
      "properties": {
        "description": {
          "description": "Description of a parameter. Optional.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional: The name that will show in UI instead of parameter 'Name'",
          "type": "string"
        },
        "from": {
          "description": "From is an input value for the generator. Optional.",
          "type": "string"
        },
        "generate": {
          "description": "generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.\n\nThe only supported generator is \"expression\", which accepts a \"from\" value in the form of a simple regular expression containing the range expression \"[a-zA-Z0-9]\", and the length expression \"a{length}\".\n\nExamples:\n\nfrom             | value",
          "type": "string"
        },
        "name": {
          "description": "Name must be set and it can be referenced in Template Items using ${PARAMETER_NAME}. Required.",
          "type": "string"
        },
        "required": {
          "description": "Optional: Indicates the parameter must have a value.  Defaults to false.",
          "type": "boolean"
        },
        "value": {
          "description": "Value holds the Parameter data. If specified, the generator will be ignored. The value replaces all occurrences of the Parameter ${Name} expression during the Template to Config transformation. Optional.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
    },
    "v1.PersistentVolumeClaimVolumeSource": {
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "properties": {
        "claimName": {
          "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string"
        },
        "readOnly": {
          "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
          "type": "boolean"
        }
      },
      "required": [
        "claimName"
      ]
    },
    "v1.PhotonPersistentDiskVolumeSource": {
      "description": "Represents a Photon Controller persistent disk resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "pdID": {
          "description": "ID that identifies Photon Controller persistent disk",
          "type": "string"
        }
      },
      "required": [
        "pdID"
      ]
    },
    "v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "items": {
            "$ref": "#/definitions/v1.PodAffinityTerm"
          },
          "type": "array"
        }
      }
    },
    "v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> tches that of any node on which a pod of the set of pods is running",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/v1.LabelSelector",
          "description": "A label query over a set of resources, in this case pods."
        },
        "namespaces": {
          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topologyKey": {
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as \"all topologies\" (\"all topologies\" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed.",
          "type": "string"
        }
      }
    },
    "v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "items": {
            "$ref": "#/definitions/v1.PodAffinityTerm"
          },
          "type": "array"
        }
      }
    },
    "v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "properties": {
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw ",
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/v1.SELinuxOptions",
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      }
    },
    "v1.PodSecurityPolicyReview": {
      "description": "PodSecurityPolicyReview checks which service accounts (not users, since that would be cluster-wide) can create the `PodTemplateSpec` in question.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.PodSecurityPolicyReviewSpec",
          "description": "spec is the PodSecurityPolicy to check."
        },
        "status": {
          "$ref": "#/definitions/v1.PodSecurityPolicyReviewStatus",
          "description": "status represents the current information/status for the PodSecurityPolicyReview."
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.PodSecurityPolicyReviewSpec": {
      "description": "PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview",
      "properties": {
        "serviceAccountNames": {
          "description": "serviceAccountNames is an optional set of ServiceAccounts to run the check with. If serviceAccountNames is empty, the template.spec.serviceAccountName is used, unless it's empty, in which case \"default\" is used instead. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "template is the PodTemplateSpec to check. The template.spec.serviceAccountName field is used if serviceAccountNames is empty, unless the template.spec.serviceAccountName is empty, in which case \"default\" is used. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored."
        }
      },
      "required": [
        "template"
      ]
    },
    "v1.PodSecurityPolicyReviewStatus": {
      "description": "PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview.",
      "properties": {
        "allowedServiceAccounts": {
          "description": "allowedServiceAccounts returns the list of service accounts in *this* namespace that have the power to create the PodTemplateSpec.",
          "items": {
            "$ref": "#/definitions/v1.ServiceAccountPodSecurityPolicyReviewStatus"
          },
          "type": "array"
        }
      },
      "required": [
        "allowedServiceAccounts"
      ]
    },
    "v1.PodSecurityPolicySelfSubjectReview": {
      "description": "PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can create the PodTemplateSpec",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.PodSecurityPolicySelfSubjectReviewSpec",
          "description": "spec defines specification the PodSecurityPolicySelfSubjectReview."
        },
        "status": {
          "$ref": "#/definitions/v1.PodSecurityPolicySubjectReviewStatus",
          "description": "status represents the current information/status for the PodSecurityPolicySelfSubjectReview."
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.PodSecurityPolicySelfSubjectReviewSpec": {
      "description": "PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview.",
      "properties": {
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "template is the PodTemplateSpec to check."
        }
      },
      "required": [
        "template"
      ]
    },
    "v1.PodSecurityPolicySubjectReview": {
      "description": "PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can create the PodTemplateSpec.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.PodSecurityPolicySubjectReviewSpec",
          "description": "spec defines specification for the PodSecurityPolicySubjectReview."
        },
        "status": {
          "$ref": "#/definitions/v1.PodSecurityPolicySubjectReviewStatus",
          "description": "status represents the current information/status for the PodSecurityPolicySubjectReview."
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.PodSecurityPolicySubjectReviewSpec": {
      "description": "PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview",
      "properties": {
        "groups": {
          "description": "groups is the groups you're testing for.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "template is the PodTemplateSpec to check. If template.spec.serviceAccountName is empty it will not be defaulted. If its non-empty, it will be checked."
        },
        "user": {
          "description": "user is the user you're testing for. If you specify \"user\" but not \"group\", then is it interpreted as \"What if user were not a member of any groups. If user and groups are empty, then the check is performed using *only* the serviceAccountName in the template.",
          "type": "string"
        }
      },
      "required": [
        "template"
      ]
    },
    "v1.PodSecurityPolicySubjectReviewStatus": {
      "description": "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview.",
      "properties": {
        "allowedBy": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "allowedBy is a reference to the rule that allows the PodTemplateSpec. A rule can be a SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that it was denied."
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available.",
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "template is the PodTemplateSpec after the defaulting is applied."
        }
      }
    },
    "v1.PodSpec": {
      "description": "PodSpec is a description of a pod.",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
          "format": "int64",
          "type": "integer"
        },
        "affinity": {
          "$ref": "#/definitions/v1.Affinity",
          "description": "If specified, the pod's scheduling constraints"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
          "type": "boolean"
        },
        "containers": {
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/v1.Container"
          },
          "type": "array"
        },
        "dnsPolicy": {
          "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
          "items": {
            "$ref": "#/definitions/v1.HostAlias"
          },
          "type": "array"
        },
        "hostIPC": {
          "description": "Use the host's ipc namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "hostNetwork": {
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
          "type": "boolean"
        },
        "hostPID": {
          "description": "Use the host's pid namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "hostname": {
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "items": {
            "$ref": "#/definitions/v1.LocalObjectReference"
          },
          "type": "array"
        },
        "initContainers": {
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "items": {
            "$ref": "#/definitions/v1.Container"
          },
          "type": "array"
        },
        "nodeName": {
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
          "type": "string"
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
          "type": "object"
        },
        "priority": {
          "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
          "format": "int32",
          "type": "integer"
        },
        "priorityClassName": {
          "description": "If specified, indicates the pod's priority. \"SYSTEM\" is a special keyword which indicates the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
          "type": "string"
        },
        "restartPolicy": {
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
          "type": "string"
        },
        "schedulerName": {
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/v1.PodSecurityContext",
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
        },
        "serviceAccount": {
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
          "type": "string"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "type": "string"
        },
        "subdomain": {
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all.",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "description": "If specified, the pod's tolerations.",
          "items": {
            "$ref": "#/definitions/v1.Toleration"
          },
          "type": "array"
        },
        "volumes": {
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
          "items": {
            "$ref": "#/definitions/v1.Volume"
          },
          "type": "array"
        }
      },
      "required": [
        "containers"
      ]
    },
    "v1.PodTemplateSpec": {
      "description": "PodTemplateSpec describes the data a pod should have when created from a template",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/v1.PodSpec",
          "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
        }
      }
    },
    "v1.PolicyRule": {
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributeRestrictions": {
          "description": "AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error.",
          "type": "string"
        },
        "nonResourceURLs": {
          "description": "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "verbs": {
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ]
    },
    "v1.PortworxVolumeSource": {
      "description": "PortworxVolumeSource represents a Portworx volume resource.",
      "properties": {
        "fsType": {
          "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "volumeID": {
          "description": "VolumeID uniquely identifies a Portworx volume",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ]
    },
    "v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "properties": {
        "uid": {
          "$ref": "#/definitions/types.UID",
          "description": "Specifies the target UID."
        }
      }
    },
    "v1.PreferredSchedulingTerm": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "properties": {
        "preference": {
          "$ref": "#/definitions/v1.NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "preference"
      ]
    },
    "v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "exec": {
          "$ref": "#/definitions/v1.ExecAction",
          "description": "One and only one of the following should be specified. Exec specifies the action to take."
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "httpGet": {
          "$ref": "#/definitions/v1.HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform."
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "#/definitions/v1.TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "v1.Project": {
      "description": "Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members, a quota on the resources that the project may consume, and the security controls on the resources in the project. Within a project, members may have different roles - project administrators can set membership, editors can create and manage the resources, and viewers can see but not access running containers. In a normal cluster project administrators are not able to alter their quotas - that is restricted to cluster administrators.\n\nListing or watching projects will return only projects the user has the reader role on.\n\nAn OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed as editable to end users while namespaces are not. Direct creation of a project is typically restricted to administrators, while end users should use the requestproject resource.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.ProjectSpec",
          "description": "Spec defines the behavior of the Namespace."
        },
        "status": {
          "$ref": "#/definitions/v1.ProjectStatus",
          "description": "Status describes the current status of a Namespace"
        }
      }
    },
    "v1.ProjectList": {
      "description": "ProjectList is a list of Project objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of projects",
          "items": {
            "$ref": "#/definitions/v1.Project"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.ProjectRequest": {
      "description": "ProjecRequest is the set of options necessary to fully qualify a project request",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "description": {
          "description": "Description is the description to apply to a project",
          "type": "string"
        },
        "displayName": {
          "description": "DisplayName is the display name to apply to a project",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        }
      }
    },
    "v1.ProjectSpec": {
      "description": "ProjectSpec describes the attributes on a Project",
      "properties": {
        "finalizers": {
          "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage",
          "items": {
            "$ref": "#/definitions/v1.FinalizerName"
          },
          "type": "array"
        }
      }
    },
    "v1.ProjectStatus": {
      "description": "ProjectStatus is information about the current status of a Project",
      "properties": {
        "phase": {
          "description": "Phase is the current lifecycle phase of the project",
          "type": "string"
        }
      }
    },
    "v1.ProjectedVolumeSource": {
      "description": "Represents a projected volume source",
      "properties": {
        "defaultMode": {
          "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "description": "list of volume projections",
          "items": {
            "$ref": "#/definitions/v1.VolumeProjection"
          },
          "type": "array"
        }
      },
      "required": [
        "sources"
      ]
    },
    "v1.QuobyteVolumeSource": {
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "group": {
          "description": "Group to map volume access to Default is no group",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
          "type": "boolean"
        },
        "registry": {
          "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
          "type": "string"
        },
        "user": {
          "description": "User to map volume access to Defaults to serivceaccount user",
          "type": "string"
        },
        "volume": {
          "description": "Volume is a string that references an already created Quobyte volume by name.",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "volume"
      ]
    },
    "v1.RBDVolumeSource": {
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
          "type": "string"
        },
        "image": {
          "description": "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "keyring": {
          "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "monitors": {
          "description": "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "description": "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "user": {
          "description": "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors",
        "image"
      ]
    },
    "v1.RecreateDeploymentStrategyParams": {
      "description": "RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy.",
      "properties": {
        "mid": {
          "$ref": "#/definitions/v1.LifecycleHook",
          "description": "Mid is a lifecycle hook which is executed while the deployment is scaled down to zero before the first new pod is created. All LifecycleHookFailurePolicy values are supported."
        },
        "post": {
          "$ref": "#/definitions/v1.LifecycleHook",
          "description": "Post is a lifecycle hook which is executed after the strategy has finished all deployment logic. All LifecycleHookFailurePolicy values are supported."
        },
        "pre": {
          "$ref": "#/definitions/v1.LifecycleHook",
          "description": "Pre is a lifecycle hook which is executed before the strategy manipulates the deployment. All LifecycleHookFailurePolicy values are supported."
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "v1.RepositoryImportSpec": {
      "description": "RepositoryImportSpec describes a request to import images from a Docker image repository.",
      "properties": {
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "From is the source for the image repository to import; only kind DockerImage and a name of a Docker image repository is allowed"
        },
        "importPolicy": {
          "$ref": "#/definitions/v1.TagImportPolicy",
          "description": "ImportPolicy is the policy controlling how the image is imported"
        },
        "includeManifest": {
          "description": "IncludeManifest determines if the manifest for each image is returned in the response",
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/v1.TagReferencePolicy",
          "description": "ReferencePolicy defines how other components should consume the image"
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.RepositoryImportStatus": {
      "description": "RepositoryImportStatus describes the result of an image repository import",
      "properties": {
        "additionalTags": {
          "description": "AdditionalTags are tags that exist in the repository but were not imported because a maximum limit of automatic imports was applied.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "images": {
          "description": "Images is a list of images successfully retrieved by the import of the repository.",
          "items": {
            "$ref": "#/definitions/v1.ImageImportStatus"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/v1.Status",
          "description": "Status reflects whether any failure occurred during import"
        }
      }
    },
    "v1.ResourceAccessReview": {
      "description": "ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "type": "string"
        },
        "isNonResourceURL": {
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces",
          "type": "string"
        },
        "path": {
          "description": "Path is the path of a non resource URL",
          "type": "string"
        },
        "resource": {
          "description": "Resource is one of the existing resource types",
          "type": "string"
        },
        "resourceAPIGroup": {
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined",
          "type": "string"
        },
        "resourceAPIVersion": {
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined",
          "type": "string"
        },
        "resourceName": {
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\"",
          "type": "string"
        },
        "verb": {
          "description": "Verb is one of: get, list, watch, create, update, delete",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ]
    },
    "v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "type": "string"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string"
        }
      },
      "required": [
        "resource"
      ]
    },
    "v1.ResourceQuotaScope": {},
    "v1.ResourceQuotaSpec": {
      "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
      "properties": {
        "hard": {
          "description": "Hard is the set of desired hard limits for each named resource. More info: https://git.k8s.io/community/contributors/design-proposals/admission_control_resource_quota.md",
          "type": "object"
        },
        "scopes": {
          "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
          "items": {
            "$ref": "#/definitions/v1.ResourceQuotaScope"
          },
          "type": "array"
        }
      }
    },
    "v1.ResourceQuotaStatus": {
      "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
      "properties": {
        "hard": {
          "description": "Hard is the set of enforced hard limits for each named resource. More info: https://git.k8s.io/community/contributors/design-proposals/admission_control_resource_quota.md",
          "type": "object"
        },
        "used": {
          "description": "Used is the current observed total usage of the resource in the namespace.",
          "type": "object"
        }
      }
    },
    "v1.ResourceQuotaStatusByNamespace": {
      "description": "ResourceQuotaStatusByNamespace gives status for a particular project",
      "properties": {
        "namespace": {
          "description": "Namespace the project this status applies to",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1.ResourceQuotaStatus",
          "description": "Status indicates how many resources have been consumed by this project"
        }
      },
      "required": [
        "namespace",
        "status"
      ]
    },
    "v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        }
      }
    },
    "v1.Role": {
      "description": "Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this Role",
          "items": {
            "$ref": "#/definitions/v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "required": [
        "rules"
      ]
    },
    "v1.RoleBinding": {
      "description": "RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. RoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "groupNames": {
          "description": "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "roleRef": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "RoleRef can only reference the current namespace and the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. Since Policy is a singleton, this is sufficient knowledge to locate a role."
        },
        "subjects": {
          "description": "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames.",
          "items": {
            "$ref": "#/definitions/v1.ObjectReference"
          },
          "type": "array"
        },
        "userNames": {
          "description": "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "userNames",
        "groupNames",
        "subjects",
        "roleRef"
      ]
    },
    "v1.RoleBindingList": {
      "description": "RoleBindingList is a collection of RoleBindings",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of RoleBindings",
          "items": {
            "$ref": "#/definitions/v1.RoleBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.RoleBindingRestriction": {
      "description": "RoleBindingRestriction is an object that can be matched against a subject (user, group, or service account) to determine whether rolebindings on that subject are allowed in the namespace to which the RoleBindingRestriction belongs.  If any one of those RoleBindingRestriction objects matches a subject, rolebindings on that subject in the namespace are allowed.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.RoleBindingRestrictionSpec",
          "description": "Spec defines the matcher."
        }
      },
      "required": [
        "metadata",
        "spec"
      ]
    },
    "v1.RoleBindingRestrictionList": {
      "description": "RoleBindingRestrictionList is a collection of RoleBindingRestriction objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of RoleBindingRestriction objects.",
          "items": {
            "$ref": "#/definitions/v1.RoleBindingRestriction"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.RoleBindingRestrictionSpec": {
      "description": "RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil.",
      "properties": {
        "grouprestriction": {
          "$ref": "#/definitions/v1.GroupRestriction",
          "description": "GroupRestriction matches against group subjects."
        },
        "serviceaccountrestriction": {
          "$ref": "#/definitions/v1.ServiceAccountRestriction",
          "description": "ServiceAccountRestriction matches against service-account subjects."
        },
        "userrestriction": {
          "$ref": "#/definitions/v1.UserRestriction",
          "description": "UserRestriction matches against user subjects."
        }
      },
      "required": [
        "userrestriction",
        "grouprestriction",
        "serviceaccountrestriction"
      ]
    },
    "v1.RoleList": {
      "description": "RoleList is a collection of Roles",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Roles",
          "items": {
            "$ref": "#/definitions/v1.Role"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.RollingDeploymentStrategyParams": {
      "description": "RollingDeploymentStrategyParams are the input to the Rolling deployment strategy.",
      "properties": {
        "intervalSeconds": {
          "description": "IntervalSeconds is the time to wait between polling deployment status after update. If the value is nil, a default will be used.",
          "format": "int64",
          "type": "integer"
        },
        "maxSurge": {
          "description": "MaxSurge is the maximum number of pods that can be scheduled above the original number of pods. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up.\n\nThis cannot be 0 if MaxUnavailable is 0. By default, 25% is used.\n\nExample: when this is set to 30%, the new RC can be scaled up by 30% immediately when the rolling update starts. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of original pods.",
          "type": "string"
        },
        "maxUnavailable": {
          "description": "MaxUnavailable is the maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of update (ex: 10%). Absolute number is calculated from percentage by rounding down.\n\nThis cannot be 0 if MaxSurge is 0. By default, 25% is used.\n\nExample: when this is set to 30%, the old RC can be scaled down by 30% immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that at least 70% of original number of pods are available at all times during the update.",
          "type": "string"
        },
        "post": {
          "$ref": "#/definitions/v1.LifecycleHook",
          "description": "Post is a lifecycle hook which is executed after the strategy has finished all deployment logic. All LifecycleHookFailurePolicy values are supported."
        },
        "pre": {
          "$ref": "#/definitions/v1.LifecycleHook",
          "description": "Pre is a lifecycle hook which is executed before the deployment process begins. All LifecycleHookFailurePolicy values are supported."
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used.",
          "format": "int64",
          "type": "integer"
        },
        "updatePeriodSeconds": {
          "description": "UpdatePeriodSeconds is the time to wait between individual pod updates. If the value is nil, a default will be used.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "v1.Route": {
      "description": "A route allows developers to expose services through an HTTP(S) aware load balancing and proxy layer via a public DNS entry. The route may further specify TLS options and a certificate, or specify a public CNAME that the router should also accept for HTTP and HTTPS traffic. An administrator typically configures their router to be visible outside the cluster firewall, and may also add additional security, caching, or traffic controls on the service content. Routers usually talk directly to the service endpoints.\n\nOnce a route is created, the `host` field may not be changed. Generally, routers use the oldest route with a given host when resolving conflicts.\n\nRouters are subject to additional customization and may support additional controls via the annotations field.\n\nBecause administrators may configure multiple routers, the route status field is used to return information to clients about the names and states of the route under each router. If a client chooses a duplicate name, for instance, the route status conditions are used to indicate the route cannot be chosen.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1.RouteSpec",
          "description": "spec is the desired state of the route"
        },
        "status": {
          "$ref": "#/definitions/v1.RouteStatus",
          "description": "status is the current state of the route"
        }
      },
      "required": [
        "spec",
        "status"
      ]
    },
    "v1.RouteIngress": {
      "description": "RouteIngress holds information about the places where a route is exposed.",
      "properties": {
        "host": {
          "description": "Host is the host string under which the route is exposed; this value is required",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions is the state of the route, may be empty.",
          "items": {
            "$ref": "#/definitions/v1.RouteIngressCondition"
          },
          "type": "array"
        },
        "routerCanonicalHostname": {
          "description": "CanonicalHostname is the external host name for the router that can be used as a CNAME for the host requested for this route. This value is optional and may not be set in all cases.",
          "type": "string"
        },
        "routerName": {
          "description": "Name is a name chosen by the router to identify itself; this value is required",
          "type": "string"
        },
        "wildcardPolicy": {
          "description": "Wildcard policy is the wildcard policy that was allowed where this route is exposed.",
          "type": "string"
        }
      }
    },
    "v1.RouteIngressCondition": {
      "description": "RouteIngressCondition contains details for the current condition of this route on a particular router.",
      "properties": {
        "lastTransitionTime": {
          "description": "RFC 3339 date and time when this condition last transitioned",
          "type": "string"
        },
        "message": {
          "description": "Human readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason for the condition's last transition, and is usually a machine and human readable constant",
          "type": "string"
        },
        "status": {
          "description": "Status is the status of the condition. Can be True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of the condition. Currently only Ready.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ]
    },
    "v1.RouteList": {
      "description": "RouteList is a collection of Routes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of routes",
          "items": {
            "$ref": "#/definitions/v1.Route"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.RoutePort": {
      "description": "RoutePort defines a port mapping from a router to an endpoint in the service endpoints.",
      "properties": {
        "targetPort": {
          "description": "The target port on pods selected by the service this route points to. If this is a string, it will be looked up as a named port in the target endpoints port list. Required",
          "type": "string"
        }
      },
      "required": [
        "targetPort"
      ]
    },
    "v1.RouteSpec": {
      "description": "RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.\n\nThe `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.",
      "properties": {
        "host": {
          "description": "host is an alias/DNS that points to the service. Optional. If not specified a route name will typically be automatically chosen. Must follow DNS952 subdomain conventions.",
          "type": "string"
        },
        "alternateBackends": {
          "description": "alternateBackends allows up to 3 additional backends to be assigned to the route. Only the Service kind is allowed, and it will be defaulted to Service. Use the weight field in RouteTargetReference object to specify relative preference.",
          "items": {
            "$ref": "#/definitions/v1.RouteTargetReference"
          },
          "type": "array"
        },
        "path": {
          "description": "Path that the router watches for, to route traffic for to the service. Optional",
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/v1.RoutePort",
          "description": "If specified, the port to be used by the router. Most routers will use all endpoints exposed by the service by default - set this value to instruct routers which port to use."
        },
        "tls": {
          "$ref": "#/definitions/v1.TLSConfig",
          "description": "The tls field provides the ability to configure certificates and termination for the route."
        },
        "to": {
          "$ref": "#/definitions/v1.RouteTargetReference",
          "description": "to is an object the route should use as the primary backend. Only the Service kind is allowed, and it will be defaulted to Service. If the weight field (0-256 default 1) is set to zero, no traffic will be sent to this backend."
        },
        "wildcardPolicy": {
          "description": "Wildcard policy if any for the route. Currently only 'Subdomain' or 'None' is allowed.",
          "type": "string"
        }
      },
      "required": [
        "host",
        "to"
      ]
    },
    "v1.RouteStatus": {
      "description": "RouteStatus provides relevant info about the status of a route, including which routers acknowledge it.",
      "properties": {
        "ingress": {
          "description": "ingress describes the places where the route may be exposed. The list of ingress points may contain duplicate Host or RouterName values. Routes are considered live once they are `Ready`",
          "items": {
            "$ref": "#/definitions/v1.RouteIngress"
          },
          "type": "array"
        }
      },
      "required": [
        "ingress"
      ]
    },
    "v1.RouteTargetReference": {
      "description": "RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others.",
      "properties": {
        "kind": {
          "description": "The kind of target that the route is referring to. Currently, only 'Service' is allowed",
          "type": "string"
        },
        "name": {
          "description": "name of the service/target that is being referred to. e.g. name of the service",
          "type": "string"
        },
        "weight": {
          "description": "weight as an integer between 0 and 256, default 1, that specifies the target's relative weight against other target reference objects. 0 suppresses requests to this backend.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "kind",
        "name",
        "weight"
      ]
    },
    "v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      }
    },
    "v1.ScaleIOVolumeSource": {
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "gateway": {
          "description": "The host address of the ScaleIO API Gateway.",
          "type": "string"
        },
        "protectionDomain": {
          "description": "The name of the Protection Domain for the configured storage (defaults to \"default\").",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "description": "Flag to enable/disable SSL communication with Gateway, default false",
          "type": "boolean"
        },
        "storageMode": {
          "description": "Indicates whether the storage for a volume should be thick or thin (defaults to \"thin\").",
          "type": "string"
        },
        "storagePool": {
          "description": "The Storage Pool associated with the protection domain (defaults to \"default\").",
          "type": "string"
        },
        "system": {
          "description": "The name of the storage system as configured in ScaleIO.",
          "type": "string"
        },
        "volumeName": {
          "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          "type": "string"
        }
      },
      "required": [
        "gateway",
        "system",
        "secretRef"
      ]
    },
    "v1.ScopeRestriction": {
      "description": "ScopeRestriction describe one restriction on scopes.  Exactly one option must be non-nil.",
      "properties": {
        "clusterRole": {
          "$ref": "#/definitions/v1.ClusterRoleScopeRestriction",
          "description": "ClusterRole describes a set of restrictions for cluster role scoping."
        },
        "literals": {
          "description": "ExactValues means the scope has to match a particular set of strings exactly",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "v1.Secret": {
      "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "data": {
          "description": "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
          "type": "object"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
        },
        "stringData": {
          "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.",
          "type": "object"
        },
        "type": {
          "description": "Used to facilitate programmatic handling of secret data.",
          "type": "string"
        }
      }
    },
    "v1.SecretBuildSource": {
      "description": "SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting.",
      "properties": {
        "destinationDir": {
          "description": "destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build.",
          "type": "string"
        },
        "secret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "secret is a reference to an existing secret that you want to use in your build."
        }
      },
      "required": [
        "secret"
      ]
    },
    "v1.SecretEnvSource": {
      "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret must be defined",
          "type": "boolean"
        }
      }
    },
    "v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or it's key must be defined",
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ]
    },
    "v1.SecretList": {
      "description": "SecretList is a list of Secret.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret",
          "items": {
            "$ref": "#/definitions/v1.Secret"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.SecretProjection": {
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      }
    },
    "v1.SecretSpec": {
      "description": "SecretSpec specifies a secret to be included in a build pod and its corresponding mount point",
      "properties": {
        "mountPath": {
          "description": "mountPath is the path at which to mount the secret",
          "type": "string"
        },
        "secretSource": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "secretSource is a reference to the secret"
        }
      },
      "required": [
        "secretSource",
        "mountPath"
      ]
    },
    "v1.SecretVolumeSource": {
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/v1.KeyToPath"
          },
          "type": "array"
        },
        "optional": {
          "description": "Specify whether the Secret or it's keys must be defined",
          "type": "boolean"
        },
        "secretName": {
          "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "type": "string"
        }
      }
    },
    "v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/v1.Capabilities",
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime."
        },
        "privileged": {
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false.",
          "type": "boolean"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/v1.SELinuxOptions",
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        }
      }
    },
    "v1.SelfSubjectRulesReview": {
      "description": "SelfSubjectRulesReview is a resource you can create to determine which actions you can perform in a namespace",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.SelfSubjectRulesReviewSpec",
          "description": "Spec adds information about how to conduct the check"
        },
        "status": {
          "$ref": "#/definitions/v1.SubjectRulesReviewStatus",
          "description": "Status is completed by the server to tell which permissions you have"
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.SelfSubjectRulesReviewSpec": {
      "description": "SelfSubjectRulesReviewSpec adds information about how to conduct the check",
      "properties": {
        "scopes": {
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil means \"use the scopes on this request\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "scopes"
      ]
    },
    "v1.ServiceAccountPodSecurityPolicyReviewStatus": {
      "description": "ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name and related review status",
      "properties": {
        "allowedBy": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "allowedBy is a reference to the rule that allows the PodTemplateSpec. A rule can be a SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that it was denied."
        },
        "name": {
          "description": "name contains the allowed and the denied ServiceAccount name",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available.",
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/v1.PodTemplateSpec",
          "description": "template is the PodTemplateSpec after the defaulting is applied."
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.ServiceAccountReference": {
      "description": "ServiceAccountReference specifies a service account and namespace by their names.",
      "properties": {
        "name": {
          "description": "Name is the name of the service account.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the service account.  Service accounts from inside the whitelisted namespaces are allowed to be bound to roles.  If Namespace is empty, then the namespace of the RoleBindingRestriction in which the ServiceAccountReference is embedded is used.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "v1.ServiceAccountRestriction": {
      "description": "ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace.",
      "properties": {
        "namespaces": {
          "description": "Namespaces specifies a list of literal namespace names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "serviceaccounts": {
          "description": "ServiceAccounts specifies a list of literal service-account names.",
          "items": {
            "$ref": "#/definitions/v1.ServiceAccountReference"
          },
          "type": "array"
        }
      },
      "required": [
        "serviceaccounts",
        "namespaces"
      ]
    },
    "v1.SignatureCondition": {
      "description": "SignatureCondition describes an image signature condition of particular kind at particular probe time.",
      "properties": {
        "lastProbeTime": {
          "description": "Last time the condition was checked.",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transit from one status to another.",
          "type": "string"
        },
        "message": {
          "description": "Human readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of signature condition, Complete or Failed.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ]
    },
    "v1.SignatureIssuer": {
      "description": "SignatureIssuer holds information about an issuer of signing certificate or key.",
      "properties": {
        "commonName": {
          "description": "Common name (e.g. openshift-signing-service).",
          "type": "string"
        },
        "organization": {
          "description": "Organization name.",
          "type": "string"
        }
      }
    },
    "v1.SignatureSubject": {
      "description": "SignatureSubject holds information about a person or entity who created the signature.",
      "properties": {
        "commonName": {
          "description": "Common name (e.g. openshift-signing-service).",
          "type": "string"
        },
        "organization": {
          "description": "Organization name.",
          "type": "string"
        },
        "publicKeyID": {
          "description": "If present, it is a human readable key id of public key belonging to the subject used to verify image signature. It should contain at least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440).",
          "type": "string"
        }
      },
      "required": [
        "publicKeyID"
      ]
    },
    "v1.SourceBuildStrategy": {
      "description": "SourceBuildStrategy defines input parameters specific to an Source build.",
      "properties": {
        "env": {
          "description": "env contains additional environment variables you want to pass into a builder container.",
          "items": {
            "$ref": "#/definitions/v1.EnvVar"
          },
          "type": "array"
        },
        "forcePull": {
          "description": "forcePull describes if the builder should pull the images from registry prior to building.",
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled"
        },
        "incremental": {
          "description": "incremental flag forces the Source build to do incremental builds if true.",
          "type": "boolean"
        },
        "pullSecret": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries"
        },
        "scripts": {
          "description": "scripts is the location of Source scripts",
          "type": "string"
        }
      },
      "required": [
        "from"
      ]
    },
    "v1.SourceControlUser": {
      "description": "SourceControlUser defines the identity of a user of source control",
      "properties": {
        "email": {
          "description": "email of the source control user",
          "type": "string"
        },
        "name": {
          "description": "name of the source control user",
          "type": "string"
        }
      }
    },
    "v1.SourceRevision": {
      "description": "SourceRevision is the revision or commit information from the source for the build",
      "properties": {
        "git": {
          "$ref": "#/definitions/v1.GitSourceRevision",
          "description": "Git contains information about git-based build source"
        },
        "type": {
          "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.SourceStrategyOptions": {
      "description": "SourceStrategyOptions contains extra strategy options for Source builds",
      "properties": {
        "incremental": {
          "description": "incremental overrides the source-strategy incremental option in the build config",
          "type": "boolean"
        }
      }
    },
    "v1.StageInfo": {
      "description": "StageInfo contains details about a build stage.",
      "properties": {
        "durationMilliseconds": {
          "description": "durationMilliseconds identifies how long the stage took to complete in milliseconds. Note: the duration of a stage can exceed the sum of the duration of the steps within the stage as not all actions are accounted for in explicit build steps.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "name is a unique identifier for each build stage that occurs.",
          "type": "string"
        },
        "startTime": {
          "description": "startTime is a timestamp representing the server time when this Stage started. It is represented in RFC3339 form and is in UTC.",
          "type": "string"
        },
        "steps": {
          "description": "steps contains details about each step that occurs during a build stage including start time and duration in milliseconds.",
          "items": {
            "$ref": "#/definitions/v1.StepInfo"
          },
          "type": "array"
        }
      }
    },
    "v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "$ref": "#/definitions/v1.StatusDetails",
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
          "type": "string"
        }
      }
    },
    "v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      }
    },
    "v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "items": {
            "$ref": "#/definitions/v1.StatusCause"
          },
          "type": "array"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "format": "int32",
          "type": "integer"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "v1.StepInfo": {
      "description": "StepInfo contains details about a build step.",
      "properties": {
        "durationMilliseconds": {
          "description": "durationMilliseconds identifies how long the step took to complete in milliseconds.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "name is a unique identifier for each build step.",
          "type": "string"
        },
        "startTime": {
          "description": "startTime is a timestamp representing the server time when this Step started. it is represented in RFC3339 form and is in UTC.",
          "type": "string"
        }
      }
    },
    "v1.StorageOSVolumeSource": {
      "description": "Represents a StorageOS persistent volume resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/v1.LocalObjectReference",
          "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted."
        },
        "volumeName": {
          "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
          "type": "string"
        },
        "volumeNamespace": {
          "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
          "type": "string"
        }
      }
    },
    "v1.SubjectAccessReview": {
      "description": "SubjectAccessReview is an object for requesting information about whether a user or group can perform an action",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "type": "string"
        },
        "groups": {
          "description": "GroupsSlice is optional. Groups is the list of groups to which the User belongs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "isNonResourceURL": {
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces",
          "type": "string"
        },
        "path": {
          "description": "Path is the path of a non resource URL",
          "type": "string"
        },
        "resource": {
          "description": "Resource is one of the existing resource types",
          "type": "string"
        },
        "resourceAPIGroup": {
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined",
          "type": "string"
        },
        "resourceAPIVersion": {
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined",
          "type": "string"
        },
        "resourceName": {
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\"",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user": {
          "description": "User is optional. If both User and Groups are empty, the current authenticated user is used.",
          "type": "string"
        },
        "verb": {
          "description": "Verb is one of: get, list, watch, create, update, delete",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ]
    },
    "v1.SubjectRulesReview": {
      "description": "SubjectRulesReview is a resource you can create to determine which actions another user can perform in a namespace",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/v1.SubjectRulesReviewSpec",
          "description": "Spec adds information about how to conduct the check"
        },
        "status": {
          "$ref": "#/definitions/v1.SubjectRulesReviewStatus",
          "description": "Status is completed by the server to tell which permissions you have"
        }
      },
      "required": [
        "spec"
      ]
    },
    "v1.SubjectRulesReviewSpec": {
      "description": "SubjectRulesReviewSpec adds information about how to conduct the check",
      "properties": {
        "groups": {
          "description": "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "scopes": {
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "user": {
          "description": "User is optional.  At least one of User and Groups must be specified.",
          "type": "string"
        }
      },
      "required": [
        "user",
        "groups",
        "scopes"
      ]
    },
    "v1.SubjectRulesReviewStatus": {
      "description": "SubjectRulesReviewStatus is contains the result of a rules check",
      "properties": {
        "evaluationError": {
          "description": "EvaluationError can appear in combination with Rules.  It means some error happened during evaluation that may have prevented additional rules from being populated.",
          "type": "string"
        },
        "rules": {
          "description": "Rules is the list of rules (no particular sort) that are allowed for the subject",
          "items": {
            "$ref": "#/definitions/v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "required": [
        "rules"
      ]
    },
    "v1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ]
    },
    "v1.TLSConfig": {
      "description": "TLSConfig defines config used to secure a route and provide termination",
      "properties": {
        "caCertificate": {
          "description": "caCertificate provides the cert authority certificate contents",
          "type": "string"
        },
        "certificate": {
          "description": "certificate provides certificate contents",
          "type": "string"
        },
        "destinationCACertificate": {
          "description": "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.",
          "type": "string"
        },
        "insecureEdgeTerminationPolicy": {
          "description": "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.\n\n* Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.",
          "type": "string"
        },
        "key": {
          "description": "key provides key file contents",
          "type": "string"
        },
        "termination": {
          "description": "termination indicates termination type.",
          "type": "string"
        }
      },
      "required": [
        "termination"
      ]
    },
    "v1.TagEvent": {
      "description": "TagEvent is used by ImageStreamStatus to keep a historical record of images associated with a tag.",
      "properties": {
        "created": {
          "description": "Created holds the time the TagEvent was created",
          "type": "string"
        },
        "dockerImageReference": {
          "description": "DockerImageReference is the string that can be used to pull this image",
          "type": "string"
        },
        "generation": {
          "description": "Generation is the spec tag generation that resulted in this tag being updated",
          "format": "int64",
          "type": "integer"
        },
        "image": {
          "description": "Image is the image",
          "type": "string"
        }
      },
      "required": [
        "created",
        "dockerImageReference",
        "image",
        "generation"
      ]
    },
    "v1.TagEventCondition": {
      "description": "TagEventCondition contains condition information for a tag event.",
      "properties": {
        "generation": {
          "description": "Generation is the spec tag generation that this status corresponds to",
          "format": "int64",
          "type": "integer"
        },
        "lastTransitionTime": {
          "description": "LastTransitionTIme is the time the condition transitioned from one status to another.",
          "type": "string"
        },
        "message": {
          "description": "Message is a human readable description of the details about last transition, complementing reason.",
          "type": "string"
        },
        "reason": {
          "description": "Reason is a brief machine readable explanation for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of tag event condition, currently only ImportSuccess",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status",
        "generation"
      ]
    },
    "v1.TagImageHook": {
      "description": "TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag.",
      "properties": {
        "containerName": {
          "description": "ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container.",
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "To is the target ImageStreamTag to set the container's image onto."
        }
      },
      "required": [
        "containerName",
        "to"
      ]
    },
    "v1.TagImportPolicy": {
      "description": "TagImportPolicy controls how images related to this tag will be imported.",
      "properties": {
        "insecure": {
          "description": "Insecure is true if the server may bypass certificate verification or connect directly over HTTP during image import.",
          "type": "boolean"
        },
        "scheduled": {
          "description": "Scheduled indicates to the server that this tag should be periodically checked to ensure it is up to date, and imported",
          "type": "boolean"
        }
      }
    },
    "v1.TagReference": {
      "description": "TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track.",
      "properties": {
        "annotations": {
          "description": "Optional; if specified, annotations that are applied to images retrieved via ImageStreamTags.",
          "type": "object"
        },
        "from": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "Optional; if specified, a reference to another image that this tag should point to. Valid values are ImageStreamTag, ImageStreamImage, and DockerImage."
        },
        "generation": {
          "description": "Generation is a counter that tracks mutations to the spec tag (user intent). When a tag reference is changed the generation is set to match the current stream generation (which is incremented every time spec is changed). Other processes in the system like the image importer observe that the generation of spec tag is newer than the generation recorded in the status and use that as a trigger to import the newest remote tag. To trigger a new import, clients may set this value to zero which will reset the generation to the latest stream generation. Legacy clients will send this value as nil which will be merged with the current tag generation.",
          "format": "int64",
          "type": "integer"
        },
        "importPolicy": {
          "$ref": "#/definitions/v1.TagImportPolicy",
          "description": "ImportPolicy is information that controls how images may be imported by the server."
        },
        "name": {
          "description": "Name of the tag",
          "type": "string"
        },
        "reference": {
          "description": "Reference states if the tag will be imported. Default value is false, which means the tag will be imported.",
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/v1.TagReferencePolicy",
          "description": "ReferencePolicy defines how other components should consume the image."
        }
      },
      "required": [
        "name",
        "annotations",
        "generation"
      ]
    },
    "v1.TagReferencePolicy": {
      "description": "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed.",
      "properties": {
        "type": {
          "description": "Type determines how the image pull spec should be transformed when the image stream tag is used in deployment config triggers or new builds. The default value is `Source`, indicating the original location of the image should be used (if imported). The user may also specify `Local`, indicating that the pull spec should point to the integrated Docker registry and leverage the registry's ability to proxy the pull to an upstream registry. `Local` allows the credentials used to pull this image to be managed from the image stream's namespace, so others on the platform can access a remote image but have no access to the remote secret. It also allows the image layers to be mirrored into the local registry which the images can still be pulled even if the upstream registry is unavailable.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "v1.Template": {
      "description": "Template contains the inputs needed to produce a Config.",
      "properties": {
        "parameters": {
          "description": "parameters is an optional array of Parameters used during the Template to Config transformation.",
          "items": {
            "$ref": "#/definitions/v1.Parameter"
          },
          "type": "array"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "labels": {
          "description": "labels is a optional set of labels that are applied to every object during the Template to Config transformation.",
          "type": "object"
        },
        "message": {
          "description": "message is an optional instructional message that will be displayed when this template is instantiated. This field should inform the user how to utilize the newly created resources. Parameter substitution will be performed on the message before being displayed so that generated credentials and other parameters can be included in the output.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "objects": {
          "description": "objects is an array of resources to include in this template. If a namespace value is hardcoded in the object, it will be removed during template instantiation, however if the namespace value is, or contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter substitution will be respected and the object will be created in that namespace.",
          "items": {
            "$ref": "#/definitions/runtime.RawExtension"
          },
          "type": "array"
        }
      },
      "required": [
        "objects"
      ]
    },
    "v1.TemplateList": {
      "description": "TemplateList is a list of Template objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of templates",
          "items": {
            "$ref": "#/definitions/v1.Template"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
          "type": "string"
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
          "type": "string"
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      }
    },
    "v1.User": {
      "description": "Upon log in, every user of the system receives a User and Identity resource. Administrators may directly manipulate the attributes of the users for their own tracking, or set groups via the API. The user name is unique and is chosen based on the value provided by the identity provider - if a user already exists with the incoming name, the user name may have a number appended to it depending on the configuration of the system.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "fullName": {
          "description": "FullName is the full name of user",
          "type": "string"
        },
        "groups": {
          "description": "Groups specifies group names this user is a member of. This field is deprecated and will be removed in a future release. Instead, create a Group object containing the name of this User.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "identities": {
          "description": "Identities are the identities associated with this user",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "identities",
        "groups"
      ]
    },
    "v1.UserIdentityMapping": {
      "description": "UserIdentityMapping maps a user to an identity",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "Identity is a reference to an identity"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "user": {
          "$ref": "#/definitions/v1.ObjectReference",
          "description": "User is a reference to a user"
        }
      }
    },
    "v1.UserList": {
      "description": "UserList is a collection of Users",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of users",
          "items": {
            "$ref": "#/definitions/v1.User"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ]
    },
    "v1.UserRestriction": {
      "description": "UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels.",
      "properties": {
        "groups": {
          "description": "Groups specifies a list of literal group names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "labels": {
          "description": "Selectors specifies a list of label selectors over user labels.",
          "items": {
            "$ref": "#/definitions/v1.LabelSelector"
          },
          "type": "array"
        },
        "users": {
          "description": "Users specifies a list of literal user names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "users",
        "groups",
        "labels"
      ]
    },
    "v1.Volume": {
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/v1.AWSElasticBlockStoreVolumeSource",
          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "azureDisk": {
          "$ref": "#/definitions/v1.AzureDiskVolumeSource",
          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
        },
        "azureFile": {
          "$ref": "#/definitions/v1.AzureFileVolumeSource",
          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
        },
        "cephfs": {
          "$ref": "#/definitions/v1.CephFSVolumeSource",
          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
        },
        "cinder": {
          "$ref": "#/definitions/v1.CinderVolumeSource",
          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        },
        "configMap": {
          "$ref": "#/definitions/v1.ConfigMapVolumeSource",
          "description": "ConfigMap represents a configMap that should populate this volume"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1.DownwardAPIVolumeSource",
          "description": "DownwardAPI represents downward API about the pod that should populate this volume"
        },
        "emptyDir": {
          "$ref": "#/definitions/v1.EmptyDirVolumeSource",
          "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
        },
        "fc": {
          "$ref": "#/definitions/v1.FCVolumeSource",
          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
        },
        "flexVolume": {
          "$ref": "#/definitions/v1.FlexVolumeSource",
          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future."
        },
        "flocker": {
          "$ref": "#/definitions/v1.FlockerVolumeSource",
          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/v1.GCEPersistentDiskVolumeSource",
          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "gitRepo": {
          "$ref": "#/definitions/v1.GitRepoVolumeSource",
          "description": "GitRepo represents a git repository at a particular revision."
        },
        "glusterfs": {
          "$ref": "#/definitions/v1.GlusterfsVolumeSource",
          "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md"
        },
        "hostPath": {
          "$ref": "#/definitions/v1.HostPathVolumeSource",
          "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "iscsi": {
          "$ref": "#/definitions/v1.ISCSIVolumeSource",
          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md"
        },
        "name": {
          "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/v1.NFSVolumeSource",
          "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource",
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/v1.PhotonPersistentDiskVolumeSource",
          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "portworxVolume": {
          "$ref": "#/definitions/v1.PortworxVolumeSource",
          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/v1.ProjectedVolumeSource",
          "description": "Items for all in one resources secrets, configmaps, and downward API"
        },
        "quobyte": {
          "$ref": "#/definitions/v1.QuobyteVolumeSource",
          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
        },
        "rbd": {
          "$ref": "#/definitions/v1.RBDVolumeSource",
          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md"
        },
        "scaleIO": {
          "$ref": "#/definitions/v1.ScaleIOVolumeSource",
          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
        },
        "secret": {
          "$ref": "#/definitions/v1.SecretVolumeSource",
          "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
        },
        "storageos": {
          "$ref": "#/definitions/v1.StorageOSVolumeSource",
          "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
        },
        "vsphereVolume": {
          "$ref": "#/definitions/v1.VsphereVirtualDiskVolumeSource",
          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1.VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
          "type": "string"
        },
        "mountPropagation": {
          "$ref": "#/definitions/v1.MountPropagationMode",
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is alpha in 1.8 and can be reworked or removed in a future release."
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
          "type": "boolean"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        }
      },
      "required": [
        "name",
        "mountPath"
      ]
    },
    "v1.VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/v1.ConfigMapProjection",
          "description": "information about the configMap data to project"
        },
        "downwardAPI": {
          "$ref": "#/definitions/v1.DownwardAPIProjection",
          "description": "information about the downwardAPI data to project"
        },
        "secret": {
          "$ref": "#/definitions/v1.SecretProjection",
          "description": "information about the secret data to project"
        }
      }
    },
    "v1.VsphereVirtualDiskVolumeSource": {
      "description": "Represents a vSphere volume resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "storagePolicyID": {
          "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          "type": "string"
        },
        "storagePolicyName": {
          "description": "Storage Policy Based Management (SPBM) profile name.",
          "type": "string"
        },
        "volumePath": {
          "description": "Path that identifies vSphere volume vmdk",
          "type": "string"
        }
      },
      "required": [
        "volumePath"
      ]
    },
    "v1.WatchEvent": {
      "properties": {
        "object": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "object"
      ]
    },
    "v1.WebHookTrigger": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
          "type": "boolean"
        },
        "secret": {
          "description": "secret used to validate requests.",
          "type": "string"
        }
      }
    },
    "v1.WeightedPodAffinityTerm": {
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/v1.PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        },
        "weight": {
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "podAffinityTerm"
      ]
    },
    "v1beta1.Scale": {
      "description": "represents a scaling request for a resource.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/v1beta1.ScaleSpec",
          "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status."
        },
        "status": {
          "$ref": "#/definitions/v1beta1.ScaleStatus",
          "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only."
        }
      }
    },
    "v1beta1.ScaleSpec": {
      "description": "describes the attributes of a scale subresource",
      "properties": {
        "replicas": {
          "description": "desired number of instances for the scaled object.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "v1beta1.ScaleStatus": {
      "description": "represents the current status of a scale subresource.",
      "properties": {
        "replicas": {
          "description": "actual number of observed instances of the scaled object.",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
          "type": "object"
        },
        "targetSelector": {
          "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
          "type": "string"
        }
      },
      "required": [
        "replicas"
      ]
    }
  }
}
